[build-system]
requires = [
    "setuptools",
    "setuptools-scm",
]
build-backend = "setuptools.build_meta"

# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html

[project]
name = "DeepSaki"
authors = [
    {name = "Sascha Kirch", email = "susch130993@googlemail.com"},
]
maintainers = [
    {name = "Sascha Kirch", email = "susch130993@googlemail.com"},
]
description = "DeepSaki is an add-on to TensorFlow. It provides a variaty of custom classes ranging from activation functions to entire models, helper functions to facilitate connectiong to your, compute HW and many more!"
keywords = ["deeplearning", "machinelearning", "tensorflow","TPU"]
license = {file = "LICENSE"}
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dynamic = ["version","readme","dependencies"]

# https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#urls
[project.urls]
Homepage = "https://sascha-kirch.github.io/"
Documentation = "https://sascha-kirch.github.io/DeepSaki"
Repository = "https://github.com/sascha-kirch/DeepSaki"
Changelog = "https://sascha-kirch.github.io/DeepSaki/latest/CHANGELOG/"

[tool.setuptools]
platforms = ["unix", "linux", "osx", "cygwin", "win32"]
packages = ["DeepSaki"]

[tool.setuptools.dynamic]
version = {attr = "DeepSaki.__version__"}
readme = {file = "./docs/README.md",content-type = "text/markdown"}
dependencies = {file = ["./environment/requirements.txt"]}

[tool.pytest.ini_options]
minversion = "7.3"
testpaths = "tests"

[tool.coverage.run]
branch = true
parallel = true
omit = [
    "setup.py",
    "DeepSaki/__init__.py",
    "DeepSaki/__version__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.coverage.paths]
source = [
    "DeepSaki/*",
]

[tool.coverage.html]
directory = "reports"

######## Tools
# code formatter
[tool.black]
target-version = ['py310']
line-length = 120
skip-string-normalization = false
skip-magic-trailing-comma = false
extend-exclude = '''
/(
  | docs
  | setup.py
)/
'''

# Static type checker
# configs: https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
# Platform configuration
python_version = "3.10"
# imports related
ignore_missing_imports = true
follow_imports = "silent"
# None and Optional handling
no_implicit_optional = true
strict_optional = false
# Configuring warnings
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
warn_return_any = false
# Untyped definitions and calls
check_untyped_defs = true
disallow_untyped_calls = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
# Disallow dynamic typing
disallow_subclassing_any = false
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
# Miscellaneous strictness flags
allow_untyped_globals = false
allow_redefinition = false
local_partial_types = false
implicit_reexport = true
strict_equality = true
# Configuring error messages
show_error_context = true
show_column_numbers = true
show_error_codes = true
exclude = ["examples","tests"]

# https://docs.astral.sh/ruff/
# https://docs.astral.sh/ruff/settings/#explicit-preview-rules
# https://docs.astral.sh/ruff/rules/
[tool.ruff]
target-version = "py310"
select = ["F", "E", "I", "D", "PL","N"]
extend-select = ["W", "C90", "YTT", "ANN", "ASYNC", "A", "C4", "RET", "SIM", "PLC", "PLE", "PLR", "PLW", "FLY", "PERF", "RUF","ARG","ERA","TRY","NPY","FURB", "B","PYI","PT","Q","RET", "ICN","FIX","SLF","PIE","FBT","BLE","S"]
ignore = ["E402","E501", "B905", "SIM300", "PD901","ANN101","FBT001","FBT002"]
fixable = ["W", "C90", "YTT", "ANN", "ASYNC", "A", "C4", "RET", "PLC", "PLE", "PLR", "PLW", "FLY", "PERF", "RUF", "F401", "D205", "D403", "D200", "D202", "D209","I001","E711","Q","Q002","PT"]
unfixable = ["SIM"]
line-length = 120
extend-exclude = ["tests","test","__init__.py"]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
[tool.ruff.isort]
force-single-line = true
force-sort-within-sections = false
lines-after-imports = 1
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-third-party = [
    "numpy",
    "pandas",
    "keras",
    "tensorflow",
    "sklearn",
    "matplotlib",
    "scipy",
    "tqdm"
]
known-first-party = []
known-local-folder = []
[tool.ruff.mccabe]
max-complexity = 8
[tool.ruff.pycodestyle]
ignore-overlong-task-comments = true
[tool.ruff.pydocstyle]
convention = "google"
[tool.ruff.flake8-annotations]
allow-star-arg-any = true
ignore-fully-untyped = false
mypy-init-return = true
[tool.ruff.pylint]
max-branches = 8
max-returns = 3
max-statements = 30
max-args = 15
allow-magic-value-types = ["str", "bytes", "complex", "float", "int"]
[tool.ruff.pep8-naming]
ignore-names = ["iFFT2D","iFFT3D","rFFT2D","use_residual_Conv2DBlock","use_ResidualBlock","rFFT2DFilter"]
[tool.ruff.flake8-pytest-style]
fixture-parentheses = true
mark-parentheses = true
parametrize-names-type = "tuple"
parametrize-values-row-type = "tuple"
parametrize-values-type = "list"
