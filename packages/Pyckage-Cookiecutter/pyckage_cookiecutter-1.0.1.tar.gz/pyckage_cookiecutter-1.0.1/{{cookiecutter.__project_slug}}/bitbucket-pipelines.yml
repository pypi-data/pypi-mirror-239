# This is a sample build configuration for Python.
# Check our guides at https://confluence.atlassian.com/x/x4UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: python:3.10-slim

.install_poetry: &install_poetry |
  apt-get update -qy && apt-get install -y build-essential make
  pip install poetry
  poetry config virtualenvs.in-project true


definitions:
  steps:
    - step: &flake8-check
        name: Lint code with flake8
        script:
          - *install_poetry
          - make install
          - make flake8
    - step: &mypy-check
        name: Lint code with mypy
        script:
          - *install_poetry
          - make install
          - make mypy
    - step: &bandit-check
        name: Lint code with bandit
        script:
          - *install_poetry
          - make install
          - make bandit
    - step: &test-step
        name: Test with pytest
        script:
          - *install_poetry
          - make install
          - make test
    - step: &build-step
        name: Build package
        script:
          - *install_poetry
          - make install
          - make build
          - pip install twine
          - poetry run twine check dist/*.whl
pipelines:
  pull-requests:
    "**":
      - parallel:
          - step: *flake8-check
          - step: *mypy-check
          - step: *bandit-check
      - parallel:
          - step:
              image: python:3.8-slim
              <<: *test-step
          - step:
              image: python:3.9-slim
              <<: *test-step
          - step:
              image: python:3.10-slim
              <<: *test-step
          - step:
              image: python:3.11-slim
              <<: *test-step
          - step:
              image: python:3.12-slim
              <<: *test-step
      - step:
          <<: *build-step
  branches:
    "{master,develop}":
      - parallel:
          - step: *flake8-check
          - step: *mypy-check
          - step: *bandit-check
      - parallel:
          - step:
              image: python:3.8-slim
              <<: *test-step
          - step:
              image: python:3.9-slim
              <<: *test-step
          - step:
              image: python:3.10-slim
              <<: *test-step
          - step:
              image: python:3.11-slim
              <<: *test-step
          - step:
              image: python:3.12-slim
              <<: *test-step
      - step:
          <<: *build-step
  tags:
    "v*":   # release tag
      - step:
          name: Deploy to pypi
          script:
            - *install_poetry
            - make install
            - make publish