[tool.pdm.build]
run-setuptools = true

[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.3.1",
    "fastapi>=0.95.1",
    "httpx>=0.24.0",
    "starlite>=1.51.10",
]
lint = [
    "black>=23.3.0",
    "isort>=5.12.0",
    "ruff>=0.0.263",
    "mypy>=1.2.0",
]
dev = []

[tool.pdm.scripts]
lint = "ruff check asgi_context"
typecheck = "mypy asgi_context"
test = "pytest"
"black:run" = "black asgi_context tests"
"black:check" = "black asgi_context tests --check"
"isort:run" = "isort asgi_context tests"
"isort:check" = "isort asgi_context tests --check-only"

[tool.pdm.scripts.format]
composite = [
    "black:run",
    "isort:run",
]

[tool.pdm.scripts."format:check"]
composite = [
    "black:check",
    "isort:check",
]

[tool.pdm.scripts."test:all"]
composite = [
    "test",
    "lint",
    "typecheck",
    "format:check",
]

[tool.black]
line-length = 120
target-version = [
    "py310",
]
exclude = "(\n  /(\n    | \\.git\n    | .venv\n    | .mypy_cache\n    | .rope_project\n    | __pycache__\n    | build\n    | dist\n  )/\n)\n"

[tool.isort]
line_length = 120
profile = "black"

[tool.mypy]
python_version = "3.10"
strict_optional = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = "tests"

[tool.ruff]
select = [
    "F",
    "B",
]
line-length = 120
unfixable = [
    "B",
]

[project]
name = "asgi_context"
version = "0.2.1"
description = "Simple request context for ASGI compatible applications"
authors = [
    { name = "Marcin Paliwoda", email = "boringstuffinc@gmail.com" },
]
dependencies = [
    "mypy-extensions>=1.0.0",
]
requires-python = ">=3.10"
readme = "README.md"

[project.license]
text = "MIT"

[build-system]
requires = [
    "pdm-backend",
    "setuptools",
    "mypy>=1.2.0",
]
build-backend = "pdm.backend"
