# Generated by Django 4.2.6 on 2023-11-04 09:34

import baserow_dynamic_table.core.fields
import baserow_dynamic_table.core.mixins
import baserow_dynamic_table.fields.fields
import baserow_dynamic_table.fields.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Field",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "updated_on",
                    baserow_dynamic_table.core.fields.SyncedDateTimeField(
                        auto_now=True
                    ),
                ),
                ("order", models.PositiveIntegerField(help_text="Lowest first.")),
                ("name", models.CharField(db_index=True, max_length=255)),
                (
                    "primary",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row.",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=models.SET(
                            baserow_dynamic_table.fields.models.get_default_field_content_type
                        ),
                        related_name="database_fields",
                        to="contenttypes.contenttype",
                        verbose_name="content type",
                    ),
                ),
            ],
            options={
                "ordering": ("-primary", "order"),
            },
            bases=(
                baserow_dynamic_table.core.mixins.OrderableMixin,
                baserow_dynamic_table.core.mixins.PolymorphicContentTypeMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="Table",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "updated_on",
                    baserow_dynamic_table.core.fields.SyncedDateTimeField(
                        auto_now=True
                    ),
                ),
                ("order", models.PositiveIntegerField()),
                ("name", models.CharField(max_length=255)),
                ("row_count", models.PositiveIntegerField(null=True)),
                ("row_count_updated_at", models.DateTimeField(null=True)),
                ("version", models.TextField(default="initial_version")),
            ],
            options={
                "ordering": ("order",),
            },
            bases=(baserow_dynamic_table.core.mixins.OrderableMixin, models.Model),
        ),
        migrations.CreateModel(
            name="BooleanField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field",),
        ),
        migrations.CreateModel(
            name="CreatedOnField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
                (
                    "date_format",
                    models.CharField(
                        choices=[
                            ("EU", "European (D/M/Y)"),
                            ("US", "US (M/D/Y)"),
                            ("ISO", "ISO (Y-M-D)"),
                        ],
                        default="EU",
                        help_text="EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)",
                        max_length=32,
                    ),
                ),
                (
                    "date_include_time",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the field also includes a time.",
                    ),
                ),
                (
                    "date_time_format",
                    models.CharField(
                        choices=[("24", "24 hour"), ("12", "12 hour")],
                        default="24",
                        help_text="24 (14:30) or 12 (02:30 PM)",
                        max_length=32,
                    ),
                ),
                (
                    "date_show_tzinfo",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the timezone should be shown.",
                    ),
                ),
                (
                    "date_force_timezone",
                    models.CharField(
                        help_text="Force a timezone for the field overriding user profile settings.",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field", models.Model),
        ),
        migrations.CreateModel(
            name="DateField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
                (
                    "date_format",
                    models.CharField(
                        choices=[
                            ("EU", "European (D/M/Y)"),
                            ("US", "US (M/D/Y)"),
                            ("ISO", "ISO (Y-M-D)"),
                        ],
                        default="EU",
                        help_text="EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)",
                        max_length=32,
                    ),
                ),
                (
                    "date_include_time",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the field also includes a time.",
                    ),
                ),
                (
                    "date_time_format",
                    models.CharField(
                        choices=[("24", "24 hour"), ("12", "12 hour")],
                        default="24",
                        help_text="24 (14:30) or 12 (02:30 PM)",
                        max_length=32,
                    ),
                ),
                (
                    "date_show_tzinfo",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the timezone should be shown.",
                    ),
                ),
                (
                    "date_force_timezone",
                    models.CharField(
                        help_text="Force a timezone for the field overriding user profile settings.",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field", models.Model),
        ),
        migrations.CreateModel(
            name="EmailField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field",),
        ),
        migrations.CreateModel(
            name="FileField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field",),
        ),
        migrations.CreateModel(
            name="LastModifiedField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
                (
                    "date_format",
                    models.CharField(
                        choices=[
                            ("EU", "European (D/M/Y)"),
                            ("US", "US (M/D/Y)"),
                            ("ISO", "ISO (Y-M-D)"),
                        ],
                        default="EU",
                        help_text="EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)",
                        max_length=32,
                    ),
                ),
                (
                    "date_include_time",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the field also includes a time.",
                    ),
                ),
                (
                    "date_time_format",
                    models.CharField(
                        choices=[("24", "24 hour"), ("12", "12 hour")],
                        default="24",
                        help_text="24 (14:30) or 12 (02:30 PM)",
                        max_length=32,
                    ),
                ),
                (
                    "date_show_tzinfo",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the timezone should be shown.",
                    ),
                ),
                (
                    "date_force_timezone",
                    models.CharField(
                        help_text="Force a timezone for the field overriding user profile settings.",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field", models.Model),
        ),
        migrations.CreateModel(
            name="LongTextField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field",),
        ),
        migrations.CreateModel(
            name="MultipleSelectField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field",),
        ),
        migrations.CreateModel(
            name="NumberField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
                (
                    "number_decimal_places",
                    models.IntegerField(
                        choices=[
                            (0, "1"),
                            (1, "1.0"),
                            (2, "1.00"),
                            (3, "1.000"),
                            (4, "1.0000"),
                            (5, "1.00000"),
                            (6, "1.000000"),
                            (7, "1.0000000"),
                            (8, "1.00000000"),
                            (9, "1.000000000"),
                            (10, "1.0000000000"),
                        ],
                        default=0,
                        help_text="The amount of digits allowed after the point.",
                    ),
                ),
                (
                    "number_negative",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if negative values are allowed.",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field",),
        ),
        migrations.CreateModel(
            name="PhoneNumberField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field",),
        ),
        migrations.CreateModel(
            name="RatingField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
                (
                    "max_value",
                    models.PositiveSmallIntegerField(
                        default=5,
                        help_text="Maximum value the rating can take.",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="dark-orange",
                        help_text="Color of the symbols.",
                        max_length=50,
                    ),
                ),
                (
                    "style",
                    models.CharField(
                        choices=[
                            ("star", "Star"),
                            ("heart", "Heart"),
                            ("thumbs-up", "Thumbs-up"),
                            ("flag", "Flags"),
                            ("smile", "Smile"),
                        ],
                        default="star",
                        help_text="Rating style. Allowed values: star, heart, thumbs-up, flag, smile.",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field",),
        ),
        migrations.CreateModel(
            name="SingleSelectField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field",),
        ),
        migrations.CreateModel(
            name="TextField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
                (
                    "text_default",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="If set, this value is going to be added every time a new row created.",
                        max_length=255,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field",),
        ),
        migrations.CreateModel(
            name="URLField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field",),
        ),
        migrations.CreateModel(
            name="SelectOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(blank=True, max_length=255)),
                ("color", models.CharField(blank=True, max_length=255)),
                ("order", models.PositiveIntegerField()),
                (
                    "field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="select_options",
                        to="baserow_dynamic_table.field",
                    ),
                ),
            ],
            options={
                "ordering": ("order", "id"),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FieldDependency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "broken_reference_field_name",
                    models.TextField(blank=True, db_index=True, null=True),
                ),
                (
                    "dependant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dependencies",
                        to="baserow_dynamic_table.field",
                    ),
                ),
                (
                    "dependency",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dependants",
                        to="baserow_dynamic_table.field",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="field",
            name="field_dependencies",
            field=models.ManyToManyField(
                related_name="dependant_fields",
                through="baserow_dynamic_table.FieldDependency",
                to="baserow_dynamic_table.field",
            ),
        ),
        migrations.AddField(
            model_name="field",
            name="table",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="baserow_dynamic_table.table",
            ),
        ),
        migrations.CreateModel(
            name="LinkRowField",
            fields=[
                (
                    "field_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="baserow_dynamic_table.field",
                    ),
                ),
                (
                    "link_row_relation_id",
                    baserow_dynamic_table.fields.fields.SerialField(null=True),
                ),
                (
                    "link_row_related_field",
                    models.ForeignKey(
                        blank=True,
                        help_text="The relation field in the other table.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="baserow_dynamic_table.linkrowfield",
                    ),
                ),
                (
                    "link_row_table",
                    models.ForeignKey(
                        blank=True,
                        help_text="The table that the field has a relation with.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="baserow_dynamic_table.table",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("baserow_dynamic_table.field",),
        ),
        migrations.AddField(
            model_name="fielddependency",
            name="via",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="vias",
                to="baserow_dynamic_table.linkrowfield",
            ),
        ),
    ]
