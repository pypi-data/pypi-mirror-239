# Copyright (c) 2017-2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
# fmt: off
# isort: skip_file

import builtins as _builtins, sys, typing as _typing

from google.protobuf.field_mask_pb2 import FieldMask
from google.protobuf.internal.containers import RepeatedCompositeFieldContainer
from google.protobuf.message import Message as _Message

__all__ = [
    "IdentityProviderConfig",
    "CreateIdentityProviderConfigRequest",
    "CreateIdentityProviderConfigResponse",
    "GetIdentityProviderConfigRequest",
    "GetIdentityProviderConfigResponse",
    "ListIdentityProviderConfigsRequest",
    "ListIdentityProviderConfigsResponse",
    "UpdateIdentityProviderConfigRequest",
    "UpdateIdentityProviderConfigResponse",
    "DeleteIdentityProviderConfigRequest",
    "DeleteIdentityProviderConfigResponse",
]


class IdentityProviderConfig(_Message):
    identity_provider_id: _builtins.str
    is_deactivated: _builtins.bool
    issuer: _builtins.str
    jwks_url: _builtins.str
    def __init__(self, *, identity_provider_id: _typing.Optional[_builtins.str] = ..., is_deactivated: _typing.Optional[_builtins.bool] = ..., issuer: _typing.Optional[_builtins.str] = ..., jwks_url: _typing.Optional[_builtins.str] = ...): ...
    def HasField(self, field_name: _typing.Literal["identity_provider_id", "is_deactivated", "issuer", "jwks_url"]) -> _builtins.bool: ...
    def ClearField(self, field_name: _typing.Literal["identity_provider_id", "is_deactivated", "issuer", "jwks_url"]) -> None: ...
    def WhichOneof(self, oneof_group: _typing.NoReturn) -> _typing.NoReturn: ...

class CreateIdentityProviderConfigRequest(_Message):
    @property
    def identity_provider_config(self) -> IdentityProviderConfig: ...
    def __init__(self, *, identity_provider_config: _typing.Optional[IdentityProviderConfig] = ...): ...
    def HasField(self, field_name: _typing.Literal["identity_provider_config"]) -> _builtins.bool: ...
    def ClearField(self, field_name: _typing.Literal["identity_provider_config"]) -> None: ...
    def WhichOneof(self, oneof_group: _typing.NoReturn) -> _typing.NoReturn: ...

class CreateIdentityProviderConfigResponse(_Message):
    @property
    def identity_provider_config(self) -> IdentityProviderConfig: ...
    def __init__(self, *, identity_provider_config: _typing.Optional[IdentityProviderConfig] = ...): ...
    def HasField(self, field_name: _typing.Literal["identity_provider_config"]) -> _builtins.bool: ...
    def ClearField(self, field_name: _typing.Literal["identity_provider_config"]) -> None: ...
    def WhichOneof(self, oneof_group: _typing.NoReturn) -> _typing.NoReturn: ...

class GetIdentityProviderConfigRequest(_Message):
    identity_provider_id: _builtins.str
    def __init__(self, *, identity_provider_id: _typing.Optional[_builtins.str] = ...): ...
    def HasField(self, field_name: _typing.Literal["identity_provider_id"]) -> _builtins.bool: ...
    def ClearField(self, field_name: _typing.Literal["identity_provider_id"]) -> None: ...
    def WhichOneof(self, oneof_group: _typing.NoReturn) -> _typing.NoReturn: ...

class GetIdentityProviderConfigResponse(_Message):
    @property
    def identity_provider_config(self) -> IdentityProviderConfig: ...
    def __init__(self, *, identity_provider_config: _typing.Optional[IdentityProviderConfig] = ...): ...
    def HasField(self, field_name: _typing.Literal["identity_provider_config"]) -> _builtins.bool: ...
    def ClearField(self, field_name: _typing.Literal["identity_provider_config"]) -> None: ...
    def WhichOneof(self, oneof_group: _typing.NoReturn) -> _typing.NoReturn: ...

class ListIdentityProviderConfigsRequest(_Message):
    def __init__(self): ...
    def HasField(self, field_name: _typing.NoReturn) -> _typing.NoReturn: ...
    def ClearField(self, field_name: _typing.NoReturn) -> _typing.NoReturn: ...
    def WhichOneof(self, oneof_group: _typing.NoReturn) -> _typing.NoReturn: ...

class ListIdentityProviderConfigsResponse(_Message):
    @property
    def identity_provider_configs(self) -> RepeatedCompositeFieldContainer[IdentityProviderConfig]: ...
    def __init__(self, *, identity_provider_configs: _typing.Optional[_typing.Iterable[IdentityProviderConfig]] = ...): ...
    def HasField(self, field_name: _typing.Literal["identity_provider_configs"]) -> _builtins.bool: ...
    def ClearField(self, field_name: _typing.Literal["identity_provider_configs"]) -> None: ...
    def WhichOneof(self, oneof_group: _typing.NoReturn) -> _typing.NoReturn: ...

class UpdateIdentityProviderConfigRequest(_Message):
    @property
    def identity_provider_config(self) -> IdentityProviderConfig: ...
    @property
    def update_mask(self) -> FieldMask: ...
    def __init__(self, *, identity_provider_config: _typing.Optional[IdentityProviderConfig] = ..., update_mask: _typing.Optional[FieldMask] = ...): ...
    def HasField(self, field_name: _typing.Literal["identity_provider_config", "update_mask"]) -> _builtins.bool: ...
    def ClearField(self, field_name: _typing.Literal["identity_provider_config", "update_mask"]) -> None: ...
    def WhichOneof(self, oneof_group: _typing.NoReturn) -> _typing.NoReturn: ...

class UpdateIdentityProviderConfigResponse(_Message):
    @property
    def identity_provider_config(self) -> IdentityProviderConfig: ...
    def __init__(self, *, identity_provider_config: _typing.Optional[IdentityProviderConfig] = ...): ...
    def HasField(self, field_name: _typing.Literal["identity_provider_config"]) -> _builtins.bool: ...
    def ClearField(self, field_name: _typing.Literal["identity_provider_config"]) -> None: ...
    def WhichOneof(self, oneof_group: _typing.NoReturn) -> _typing.NoReturn: ...

class DeleteIdentityProviderConfigRequest(_Message):
    identity_provider_id: _builtins.str
    def __init__(self, *, identity_provider_id: _typing.Optional[_builtins.str] = ...): ...
    def HasField(self, field_name: _typing.Literal["identity_provider_id"]) -> _builtins.bool: ...
    def ClearField(self, field_name: _typing.Literal["identity_provider_id"]) -> None: ...
    def WhichOneof(self, oneof_group: _typing.NoReturn) -> _typing.NoReturn: ...

class DeleteIdentityProviderConfigResponse(_Message):
    def __init__(self): ...
    def HasField(self, field_name: _typing.NoReturn) -> _typing.NoReturn: ...
    def ClearField(self, field_name: _typing.NoReturn) -> _typing.NoReturn: ...
    def WhichOneof(self, oneof_group: _typing.NoReturn) -> _typing.NoReturn: ...
