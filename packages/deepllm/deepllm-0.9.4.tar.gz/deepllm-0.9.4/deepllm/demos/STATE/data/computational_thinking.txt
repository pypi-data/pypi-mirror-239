Computational thinking CT refers to the thought processes involved in formulating problems so their solutions can be represented as computational steps and algorithms.
In education CT is a set of problem solving methods that involve expressing problems and their solutions in ways that a computer could also execute.
It involves automation of processes but also using computing to explore analyze and understand processes natural and artificial.
History The history of computational thinking as a concept dates back at least to the 1950s but most ideas are much older.
Computational thinking involves ideas like abstraction data representation and logically organizing data which are also prevalent in other kinds of thinking such as scientific thinking engineering thinking systems thinking design thinking model based thinking and the like.
Computational thinking can be used to algorithmically solve complicated problems of scale and is often used to realize large improvements in efficiency.
The phrase computational thinking was brought to the forefront of the computer science education community in 2006 as a result of a Communications of the ACM essay on the subject by Jeannette Wing.
The essay suggested that thinking computationally was a fundamental skill for everyone not just computer scientists and argued for the importance of integrating computational ideas into other subjects in school.
The essay also said that by learning computational thinking children will be better in many everyday examples the essay gave packing one s backpack finding one s lost mittens and knowing when to stop renting and buying instead.
The continuum of computational thinking questions in education ranges from computing for children to professional and continuing education where the challenge is how to communicate deep principles maxims and ways of thinking between experts.
For the first ten years computational thinking was a US centered movement and still today that early focus is seen in the field s research.
The field s most cited articles and most cited people were active in the early US CT wave and the field s most active researcher networks are US based.
Dominated by US and European researchers it is unclear to what extent can the field s predominantly Western body of research literature cater to the needs of students in other cultural groups.
Characteristics The characteristics that define computational thinking are decomposition pattern recognition data representation generalization abstraction and algorithms.
By decomposing a problem identifying the variables involved using data representation and creating algorithms a generic solution results.
The generic solution is a generalization or abstraction that can be used to solve a multitude of variations of the initial problem.
Another characterization of computational thinking is the three As iterative process based on three stages.
Abstraction Problem formulation Automation Solution expression Analysis Solution execution and evaluation.
Connection to the four Cs The four Cs of 21st century learning are communication critical thinking collaboration and creativity.
The fifth C could be computational thinking which entails the capability to resolve problems algorithmically and logically.
It includes tools that produce models and visualize data.
Grover describes how computational thinking is applicable across subjects beyond science technology engineering and mathematics STEM which include the social sciences and language arts.
Since its inception the 4 Cs have gradually gained acceptance as important elements of many school syllabi.
This development triggered a modification in platforms and directions such as inquiry project based and more profound learning across all levels.
Many countries have introduced computer thinking to all students.
The United Kingdom has CT in its national curriculum since.
Other nations like Australia China Korea and New Zealand embarked on massive efforts to introduce computational thinking in schools.
In the United States President Barack Obama created this program Computer Science for All to empower this generation of students in America with the proper computer science proficiency required to flourish in a digital economy.
Computational thinking means thinking or solving problems like computer scientists.
Career readiness can be integrated into academic environments in multiple ways.
The algoRithms part of CT has also been referred to as the fourth R where the others are Reading wRiting and aRithmetic.
In education Similar to Seymour Papert Alan Perlis and Marvin Minsky before Jeannette Wing envisioned computational thinking becoming an essential part of every child s education.
However integrating computational thinking into the curriculum and computer science education has faced several challenges including the agreement on the definition of computational thinking how to assess children s development in it and how to distinguish it from other similar thinking like systems thinking design thinking and engineering thinking.
Currently computational thinking is broadly defined as a set of cognitive skills and problem solving processes that include but are not limited to the following characteristics but there are arguments that few if any of them belong to computing specifically instead of being principles in many fields of science and engineering.
Using abstractions and pattern recognition to represent the problem in new and different ways Logically organizing and analyzing data Breaking the problem down into smaller parts Approaching the problem using programmatic thinking techniques such as iteration symbolic representation and logical operations Reformulating the problem into a series of ordered steps algorithmic thinking Identifying analyzing and implementing possible solutions with the goal of achieving the most efficient and effective combination of steps and resources Generalizing this problem solving process to a wide variety of problemsCurrent integration computational thinking into the curriculum comes in two forms in computer science classes directly or through the use and measure of computational thinking techniques in other subjects.
Teachers in Science Technology Engineering and Mathematics STEM focused classrooms that include computational thinking allow students to practice problem solving skills such as trial and error.
Valerie Barr and Chris Stephenson describe computational thinking patterns across disciplines in a 2011 ACM Inroads article However Conrad Wolfram has argued that computational thinking should be taught as a distinct subject.
There are online institutions that provide a curriculum and other related resources to build and strengthen pre college students with computational thinking analysis and problem solving.
Center for Computational Thinking Carnegie Mellon University in Pittsburgh has a Center for Computational Thinking.
The Center s major activity is conducting PROBEs or PROBlem oriented Explorations.
These PROBEs are experiments that apply novel computing concepts to problems to show the value of computational thinking.
A PROBE experiment is generally a collaboration between a computer scientist and an expert in the field to be studied.
The experiment typically runs for a year.
In general a PROBE will seek to find a solution for a broadly applicable problem and avoid narrowly focused issues.
Some examples of PROBE experiments are optimal kidney transplant logistics and how to create drugs that do not breed drug resistant viruses.
Criticism The concept of computational thinking has been criticized as too vague as it s rarely made clear how it is different from other forms of thought.
The inclination among computer scientist to force computational solutions upon other fields has been called computational chauvinism.
Some computer scientists worry about the promotion of computational thinking as a substitute for a broader computer science education as computational thinking represents just one small part of the field.
Others worry that the emphasis on computational thinking encourages computer scientists to think too narrowly about the problems they can solve thus avoiding the social ethical and environmental implications of the technology they create.
In addition as nearly all CT research is done in the US and Europe it is not certain how well those educational ideas work in other cultural contexts.
A 2019 paper argues that the term computational thinking CT should be used mainly as a shorthand to convey the educational value of computer science hence the need of teaching it in school.
Particularly important is to stress the fact that the scientific novelty associated with CT is the shift from the problem solving of mathematics to the having problem solved of computer science.
Without the effective agent who automatically executes the instructions received to solve the problem there would be no computer science but just mathematics.
Another criticism in the same paper is that focusing on problem solving is too narrow since solving a problem is just an instance of a situation where one wants to reach a specified goal.
Many definitions of CT describe it only at skill level because the momentum behind its growth comes from its promise to boost STEM education.
And the latest movement in STEM education is based on suggestions by learning theories that we teach students experts habits of mind.
So whether it is computational thinking scientific thinking or engineering thinking the motivation is the same and the challenge is also the same teaching experts habits of mind to novices is inherently problematic because of the prerequisite content knowledge and practice skills needed to engage them in the same thinking processes as the experts.
Only when we link the experts habits of mind to fundamental cognitive processes can we then narrow their skill sets down to more basic competencies that can be taught to novices.
Among those Yasar Communications of ACM Vol 61 No 7 July 2018.
Accordingly everyone employs CT not just computer scientists and it can be improved via education and experience.
See also Computer based math Computational Intelligence Artificial Intelligence Decision making Machine learning Data Science Computational literacy.
