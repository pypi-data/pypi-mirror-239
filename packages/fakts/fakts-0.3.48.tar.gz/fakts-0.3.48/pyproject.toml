[tool.poetry]
name = "fakts"
version = "0.3.48"
description = "asynchronous configuration provider ( tailored to support dynamic client-server relations)"
authors = ["jhnnsrs <jhnnsrs@gmail.com>"]
license = "CC BY-NC 3.0"
readme = "README.md"
packages = [{ include = "fakts" }]

[tool.poetry.dependencies]
python = "^3.7"
pydantic = ">1.8.2"
PyYAML = ">= 5.2"
QtPy = "^2.0.1"
koil = ">=0.3.5"
aiohttp = { version = "^3.8.2", optional = true }
certifi = { version = ">2021", optional = true }

[tool.poetry.extras]
remote = ["aiohttp", "certifi"]

[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
pytest-aiohttp = "^0.3.0"
tox = "^3.24.5"
pytest-cov = "^3.0.0"
pytest-qt = "^4.0.2"
PyQt5 = "^5.15.6"
testcontainers = "^3.5.3"
black = "^22.8.0"
autoflake = "^1.6.1"
pydoc-markdown = "4.5.1"


[tool.poetry.group.dev.dependencies]
mypy = "^0.991"
rich = "^12.6.0"
pyperclip = "^1.8.2"
netifaces = "^0.11.0"

[tool.pytest.ini_options]
qt_api = "pyqt5"
markers = [
    "integration: marks tests that require a running server",
    "qt: marks tests that require a running qt application",
    "network: marks tests that require a network connection",
]

[tool.ruff]
extend-select = ["ANN001","ANN204", "F401"]


[[tool.pydoc-markdown.loaders]]
type = "python"
search_path = ["fakts"]

[tool.pydoc-markdown.renderer]
type = "docusaurus"
docs_base_path = "website/docs"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
