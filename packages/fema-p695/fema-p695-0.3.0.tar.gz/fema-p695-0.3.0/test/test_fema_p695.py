import math

import numpy as np

import fema_p695


def test_acmrxx():
    # Check that we produce FEMA P695 Table 7-3
    table_7_3_tot_uncertainty = np.array(
        [
            0.275,
            0.300,
            0.325,
            0.350,
            0.375,
            0.400,
            0.425,
            0.450,
            0.475,
            0.500,
            0.525,
            0.550,
            0.575,
            0.600,
            0.625,
            0.650,
            0.675,
            0.700,
            0.725,
            0.750,
            0.775,
            0.800,
            0.825,
            0.850,
            0.875,
            0.900,
            0.925,
            0.950,
        ]
    )
    table_7_3_collapse_prob = np.array([0.05, 0.10, 0.15, 0.20, 0.25])
    table_7_3_acmrxx = np.array(
        [
            [1.57, 1.42, 1.33, 1.26, 1.20],
            [1.64, 1.47, 1.36, 1.29, 1.22],
            [1.71, 1.52, 1.40, 1.31, 1.25],
            [1.78, 1.57, 1.44, 1.34, 1.27],
            [1.85, 1.62, 1.48, 1.37, 1.29],
            [1.93, 1.67, 1.51, 1.40, 1.31],
            [2.01, 1.72, 1.55, 1.43, 1.33],
            [2.10, 1.78, 1.59, 1.46, 1.35],
            [2.18, 1.84, 1.64, 1.49, 1.38],
            [2.28, 1.90, 1.68, 1.52, 1.40],
            [2.37, 1.96, 1.72, 1.56, 1.42],
            [2.47, 2.02, 1.77, 1.59, 1.45],
            [2.57, 2.09, 1.81, 1.62, 1.47],
            [2.68, 2.16, 1.86, 1.66, 1.50],
            [2.80, 2.23, 1.91, 1.69, 1.52],
            [2.91, 2.30, 1.96, 1.73, 1.55],
            [3.04, 2.38, 2.01, 1.76, 1.58],
            [3.16, 2.45, 2.07, 1.80, 1.60],
            [3.30, 2.53, 2.12, 1.84, 1.63],
            [3.43, 2.61, 2.18, 1.88, 1.66],
            [3.58, 2.70, 2.23, 1.92, 1.69],
            [3.73, 2.79, 2.29, 1.96, 1.72],
            [3.88, 2.88, 2.35, 2.00, 1.74],
            [4.05, 2.97, 2.41, 2.04, 1.77],
            [4.22, 3.07, 2.48, 2.09, 1.80],
            [4.39, 3.17, 2.54, 2.13, 1.83],
            [4.58, 3.27, 2.61, 2.18, 1.87],
            [4.77, 3.38, 2.68, 2.22, 1.90],
        ]
    )
    expected = table_7_3_acmrxx
    generated = fema_p695.acmrxx(
        table_7_3_tot_uncertainty.reshape(-1, 1),
        table_7_3_collapse_prob.reshape(1, -1),
    )
    np.testing.assert_array_equal(expected, generated.round(2))


def test_seismic_response_coeff():
    Cs = fema_p695.seismic_response_coeff(8, 3.1, 'Dmax')
    assert math.isclose(Cs, 0.044)


def test_seismic_response_coeff_mce():
    Cs = fema_p695.seismic_response_coeff(8, 3.1, 'Dmax', level='mce')
    assert math.isclose(Cs, 0.066)
