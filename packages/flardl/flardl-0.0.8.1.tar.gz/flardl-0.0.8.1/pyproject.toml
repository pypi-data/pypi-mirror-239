[tool.poetry]
name = "flardl"
version = "0.0.8.1"
description = "Adaptive Elastic Multi-Site Downloading"
authors = ["Joel Berendzen <joel@generisbio.com>"]
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://github.com/hydrationdynamics/flardl"
repository = "https://github.com/hydrationdynamics/flardl"
documentation = "https://flardl.readthedocs.io"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
]
keywords = [
    "downloading",
    "asynchronous",
    "multidispatching",
    "queueing",
    "adaptive",
    "elastic",
    "adaptilastic",
    "federated",
    "high-performance",
]

[tool.poetry.urls]
Changelog = "https://github.com/hydrationdynamics/flardl/releases"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
anyio = ">=3.7.0"
attrs = ">=22.2.0"
httpx = {extras = ["http2"], version = ">=0.23.3"}
tqdm = ">=4.64.1"
uvloop = { version = ">=0.17.0", markers = "sys_platform != 'win32'"}
trio = ">=0.22.0"
psutil = ">=5.9.5"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
nox = ">=2021.6.6"


[tool.poetry.group.pre-commit]
optional = true

[tool.poetry.group.pre-commit.dependencies]
pre-commit = ">=2.16.0"
pre-commit-hooks = ">=4.1.0"
ruff = ">=0.1.3"

[tool.poetry.group.analysis]
optional = true

[tool.poetry.group.analysis.dependencies]
seaborn = ">=0.12.2"
scipy = ">=1.11.1"
typer = ">=0.9.0"

[tool.poetry.group.safety]
optional = true

[tool.poetry.group.safety.dependencies]
safety = ">=1.10.3"

[tool.poetry.group.coverage]
optional = true

[tool.poetry.group.coverage.dependencies]
coverage = {extras = ["toml"], version = "^6.2"}

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
Pygments = ">=2.10.0"
hypothesis = ">=6.88.1"
numpy = ">=1.25.1"
pandas = ">=1.4.0"
pandas-stubs = ">=1.5.2.221124"
pytest = ">=6.2.5"
pytest-datadir-mgr = ">1.3.1"
pytest-trio = ">=0.8.0"

[tool.poetry.group.mypy]
optional = true

[tool.poetry.group.mypy.dependencies]
mypy = ">=0.930"

[tool.poetry.group.typeguard]
optional = true

[tool.poetry.group.typeguard.dependencies]
typeguard = "^2.13.0"

[tool.poetry.group.xdoctest]
optional = true

[tool.poetry.group.xdoctest.dependencies]
xdoctest = {extras = ["colors"], version = "^0.15.10"}

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
furo = ">=2021.11.12"
linkify-it-py = ">=2.0.2"
myst-parser = {version = ">=0.16.1"}
numpy = ">=1.25.1"
sphinx = ">=4.3.0"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = "^3.0.2"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
source = ["flardl"]
concurrency = ["multiprocessing"]
sigterm = true
parallel = true

[tool.coverage.report]
show_missing = true

[tool.cruft]
skip = ["src/*", "tests/*", "analysis/", "poetry.lock"]

[tool.mypy]
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.pytest.ini_options]
addopts = ["-x"]

[tool.ruff]
src = ['src', 'tests']
line-length = 88
select = [
  'A',
  'ARG',
  'B',
  'B9',
  'BLE',
  'C',
  'C4',
  'D',
  'DTZ',
  'E',
  'F',
  'I',
  'I001',
  'N',
  'PIE',
  'PT',
  'PTH',
  'Q',
  'RET',
  'RUF',
  'S',
  'SIM',
  'SLF',
  'T10',
  'TCH',
  'UP',
  'W',
]
target-version = 'py37'

[tool.ruff.per-file-ignores]
"__init__.py" = ['F401']
"tests/*" = [
    'D104',
    'D205',
    'D212',
    'D415',
    'D205',
    'D104',
    'S101'
]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.pydocstyle]
convention = 'google'

[tool.ruff.isort]
force-single-line = true
lines-after-imports = 2

[build-system]
requires = ["poetry-core>=1.1.0a6"]
build-backend = "poetry.core.masonry.api"
