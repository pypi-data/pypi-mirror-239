Metadata-Version: 2.1
Name: normtest
Version: 0.0.1
Summary: Check that your data follows, at least approximately, the Normal distribution.
Author-email: Anderson Marcos Dias Canteli <andersonmdcanteli@gmail.com>
License: BSD 3-Clause License
        
        Copyright (c) 2023, puzzle-in-a-mug
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its
           contributors may be used to endorse or promote products derived from
           this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Project-URL: Source, https://github.com/puzzle-in-a-mug/normtest
Project-URL: Docs, https://normtest.readthedocs.io/en/latest/index.html
Keywords: normality,sample,test
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.23.5
Requires-Dist: pandas>=1.5.3
Requires-Dist: matplotlib>=3.7.1
Requires-Dist: scipy>=1.11.3
Requires-Dist: paramcheckup>=1.0.0

<img src="https://raw.githubusercontent.com/puzzle-in-a-mug/normtest/main/docs/_static/favicon-180x180.png" align="right" />

# normtest

<img src="https://img.shields.io/badge/Python-FFD43B?style=for-the-badge&logo=python&logoColor=blue"> <img src="https://img.shields.io/badge/numpy-%23013243.svg?style=for-the-badge&logo=numpy&logoColor=white"> <img src="https://img.shields.io/badge/SciPy-%230C55A5.svg?style=for-the-badge&logo=scipy&logoColor=%white"> <img src="https://img.shields.io/badge/Pandas-2C2D72?style=for-the-badge&logo=pandas&logoColor=white"> <img src="https://img.shields.io/badge/Matplotlib-%23ffffff.svg?style=for-the-badge&logo=Matplotlib&logoColor=black"> <img src="https://img.shields.io/badge/License-BSD%203--Clause-blue.svg">

This package has a series of tests used to check whether a set of sample data follows, at least approximately, the Normal distribution.

## Available tests (07/11/2023)

- Ryan-Joiner


## Install

```
pip install normtest
```

## Usage

To apply tests directly to the data, import the package as follows:

```python
import normtest as nm
```

And then apply the test by passing the dataset. For example, Ryan Joiner's test:

```python
import numpy as np
x_data = np.array([...])
result = nm.rj_test(x_data)
print(result)
```

However, if you want to extract more information about a test, you need to import the test directly:

```python
from normtest import ryan_joiner
```

This way, it is possible to generate graphs and obtain intermediate values from the test calculations. For example, to use the line up method:

```python
import matplotlib.pyplot as plt
fig = ryan_joiner.line_up(x_data, correct=False)
plt.savefig(...)
```



## License

- [BSD 3-Clause License](https://github.com/puzzle-in-a-mug/normtest/blob/main/LICENSE)
