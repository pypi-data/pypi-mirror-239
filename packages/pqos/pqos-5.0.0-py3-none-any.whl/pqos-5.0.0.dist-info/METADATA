Metadata-Version: 2.1
Name: pqos
Version: 5.0.0
Summary: Python interface for Intel(R) RDT PQoS library
Home-page: https://github.com/intel/intel-cmt-cat
Author-email: Michal Aleksinski <michalx.aleksinski@intel.com>, Wojciech Andralojc <wojciechx.andralojc@intel.com>, Adrian Boczkowski <adrianx.boczkowski@intel.com>, Khawar Abbasi <khawar.abbasi@intel.com>
Maintainer-email: Michal Aleksinski <michalx.aleksinski@intel.com>
License: BSD LICENSE
        
        Copyright(c) 2020-2023 Intel Corporation. All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions
        are met:
        
          * Redistributions of source code must retain the above copyright
            notice, this list of conditions and the following disclaimer.
          * Redistributions in binary form must reproduce the above copyright
            notice, this list of conditions and the following disclaimer in
            the documentation and/or other materials provided with the
            distribution.
          * Neither the name of Intel Corporation nor the names of its
            contributors may be used to endorse or promote products derived
            from this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
        "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
        LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
        A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
        OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
        LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
        DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
        THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
        (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
        
Project-URL: Homepage, https://github.com/intel/intel-cmt-cat
Project-URL: Source Code, https://github.com/intel/intel-cmt-cat
Project-URL: Bug Tracker, https://github.com/intel/intel-cmt-cat/issues
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: License :: OSI Approved :: BSD License
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: bandit ; extra == 'dev'
Requires-Dist: pylint ==2.17.0 ; extra == 'dev'
Requires-Dist: coverage ; extra == 'dev'
Requires-Dist: caniusepython3 ; extra == 'dev'

Python interface for Intel(R) RDT PQoS library
==============================================

[![Coverity Status](https://scan.coverity.com/projects/intel-cmt-cat/badge.svg)](https://scan.coverity.com/projects/intel-cmt-cat)
[![License](https://img.shields.io/badge/Licence-BSD%203--Clause-blue)](https://github.com/intel/intel-cmt-cat/blob/master/lib/python/LICENSE)

Contents
--------
* Overview
* Installation
* Running tests
* Legal Disclaimer

Overview
--------
This a Python interface for PQoS library. This wrapper requires Python 3.x
and libpqos installed in the system. The package is named 'pqos'.

Installation
------------
To build the package:
```
pip install build
python -m build
```

Once the package is built, it can be installed by running:
```
pip install dist/pqos-<VERSION>.tar.gz
```

Running tests
-------------
In order to run unit tests, create coverage report or check coding style
it is required to setup virtual environment first. All of the following commands
will setup it if it has not been created yet. The virtual environment
will be created in `test_env/`.

To setup test environment:
```
make setup-dev
```

To run unit tests:
```
make test
```

After running unit tests, the coverage report can be generated:
```
make coverage
```

To check coding style with pylint run:
```
make style
```

To clear a virtual environment and remove cache files:
```
make clean
```

Legal Disclaimer
----------------
THIS SOFTWARE IS PROVIDED BY INTEL"AS IS". NO LICENSE, EXPRESS OR
IMPLIED, BY ESTOPPEL OR OTHERWISE, TO ANY INTELLECTUAL PROPERTY RIGHTS
ARE GRANTED THROUGH USE. EXCEPT AS PROVIDED IN INTEL'S TERMS AND
CONDITIONS OF SALE, INTEL ASSUMES NO LIABILITY WHATSOEVER AND INTEL
DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTY, RELATING TO SALE AND/OR
USE OF INTEL PRODUCTS INCLUDING LIABILITY OR WARRANTIES RELATING TO
FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABILITY, OR INFRINGEMENT
OF ANY PATENT, COPYRIGHT OR OTHER INTELLECTUAL PROPERTY RIGHT.
