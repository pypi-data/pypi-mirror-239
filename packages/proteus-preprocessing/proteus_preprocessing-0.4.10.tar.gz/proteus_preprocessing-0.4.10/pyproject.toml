[tool.poetry]
name = "proteus-preprocessing"
version = "0.4.10"
description = ""
authors = []
packages = [
    { include = "preprocessing/modular" },
    { include = "preprocessing/deck" },
    { include = "preprocessing/facilities" },
    { include = "preprocessing/utils" },
    { include = "preprocessing/patches.py" },
    { include = "preprocessing/__init__.py" },
]

[tool.poetry.dependencies]
python = "^3.8"
python-json-logger = "^2.0.1"
tqdm = "^4.61.0"
tabulate = "^0.8.9"
readchar = "^3.0.4"
libecl = "2.13.2"
h5py = "^3.6.0"
pandas = "^1.4.1"
ecl2df = "0.16.1"
opm = "2022.4"
#tables = "^3.7.0"
scikit-network="^0.31.0"

[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
pre-commit = "^2.9.3"
poethepoet = "^0.16.0"
black = "^22.6.0"
flake8 = "^4.0.1"


[tool.poe.tasks]
    # Composing commands
    test = ['flake8', 'black_check', 'pytest']
    format = ["black_format"]

    [tool.poe.tasks.flake8]
        cmd="""
            flake8 preprocessing
                --max-line-length=120
        """
        help="Check code style using flake8"
    [tool.poe.tasks.black_check]
        cmd="""
            black preprocessing --check --diff
                --line-length=120
        """
        help="Check code style using black does not refactor"
    [tool.poe.tasks.pytest]
        cmd="pytest tests"
        help="Run python tests"

    [tool.poe.tasks.black_format]
        cmd="""
            black . --line-length=120
        """
        help="Refactor using black, excluding migrations"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
