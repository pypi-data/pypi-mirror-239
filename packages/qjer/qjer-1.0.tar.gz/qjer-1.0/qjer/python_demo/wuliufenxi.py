#!/usr/bin/env python
# coding: utf-8

# **项目背景**<br>
# 物流寄递业是在传统运输业和邮寄业务的基础上伴随信息产业发展起来的一个新兴行业，在促进经济发展、方便社会交流、扩大就业等方面发挥了积极作用，但是疫情期间，各地相继出台并严格执行关于停工、限制物流与人员流动等疫情防控政策，严防快递物流引发输入疫情，民众应减少网购或代购境外商品，暂缓从近14天有本土疫情的省份网购商品，现有某时间段内物流数据，要求结合相关防疫机制进行分析并给出结果。<br>
# 
# **数据说明**<br>
# 文件：logistics.csv
# ```
# 运单编号,货运公司名称,货物名称,货物数量,货物重量,始发站：省,始发站：市,始发站：区/县,发货客户名称,发货客户手机,发货客户电话,发货客户地址（寄件地址）,发货时间,目的站：省,目的站：市,目的站：区/县,收货客户名称,收货客户手机,收货客户电话,收货客户地址（收件地址）,货物类型
# 903853006100,中通速递,,0,0,山西省,运城市,盐湖区,肖*辉,171****5263,171****5263,工农东街3***,2019-4-14,湖北省,襄阳市,襄州区,何*,135****5888,135****5888,光彩大市场8栋3***,无
# ```

# In[2]:


# 导库
import numpy as np
import pandas as pd


# In[3]:


import os
os.getcwd()


# In[6]:


# 读取数据
data = pd.read_csv('logistics.csv',encoding='utf-8')
data.head(1)


# #### 1.对全量数据中各货运公司运单数统计
# 思路：直接查看不同公司的数量即可

# In[9]:


df1 = data['货运公司名称'].value_counts() #直接对货运公司的名称做统计(示例： 天天速递 25)
df1


# #### 2.接通知对寄往北京的快递案件全面升级，对数据中目的站为“北京市”的运单进行分析，统计对应的始发站（省）及各省运单数
# 思路：先按目的地为“北京“筛选，在此基础上查看不同始发站的数量

# In[13]:


#先找出目的地北京的
df2 = data[data['目的站：省']=='北京市'] 
df2


# In[14]:


#然后对始发站（省）进行数值统计 (示例： 山西省 1)
df2['始发站：省'].value_counts()


# #### 3.自2019年底新冠疫情以来，防控形势严峻复杂，物流传播风险加大，根据西安防疫政策需要对疫情以来（2019年12月及以后）本市始发物流进行监管
# 思路：先按时间筛选出2019年12月1日及以后的数据，在此基础上再筛选出始发为西安的数据（这两步顺序任意），最后再选取重要信息列。<br>
# 数据要求：运单编号 货运公司名称 发货客户名称 发货客户手机 收货客户地址(收件地址)<br>
# 保存文件：03.txt(同目录下，下同)

# In[6]:


#查看数据类型
data.dtypes


# In[33]:


#将发货时间改为时间类型
data['发货时间'] = pd.to_datetime(data['发货时间'], format='%Y-%m-%d')

#筛选发货时间2019-12-01及以后的数据
df3 = data[data['发货时间']>='2019-12-01']
df3.head()


# In[34]:


#筛选始发站为西安
df3 = df3[df3['始发站：市']=='西安市']
df3.head()


# In[35]:


#选择重要信息列
df_3=df3[['运单编号','货运公司名称','发货客户名称','发货客户手机','收货客户地址（收件地址）']]
df_3


# In[36]:


#保存文件
df_3.to_csv('03.txt') #pandas直接存为txt


# #### 4.接防疫通知，人员“付*君”于2019/12/18筛查核酸阳性，结合上题物流信息，对其阳性当天前后7天内的物流进行追踪，将对应收货人作为重点监控人员
# 思路：筛选人员“付 * 君”的数据，在此基础上计算“付 * 君”发快递时间与“2019/12/18”的时间差，选取时间差绝对值小于等于7的部分，进而追踪对应的收货人。<br>
# 数据要求：发货时间 收货客户名称 收货客户手机 收货客户地址（收件地址）<br>
# 保存文件：04.txt

# In[37]:


#在西安的数据中查找付*君
df4 = df3[df3['发货客户名称'] == '付*君']
df4.head()


# In[42]:


#计算发货时间和'2019-12-18'的时间差 <= 7
#展示重要信息列
#保存文件
df4=df4[(df4['发货时间']<='2019-12-25') & (df4['发货时间']>='2019-12-11')]
df4.head
df4 = df4[['发货时间', '收货客户名称', '收货客户手机','收货客户地址（收件地址）']]
df4.to_csv('04.txt')


# #### 5.为加强冷链食品疫情防控，对冷藏产品进行重点追踪
# 思路：直接筛选货物类型为“冷藏产品”的数据<br>
# 数据要求：运单编号 货运公司名称 始发站：省 始发站：市 发货客户名称 发货客户手机 货物类型<br>
# 保存文件：05.txt

# In[48]:


df5 = data[data['货物类型']=='冷藏产品']
df5 = df5[['运单编号', '货运公司名称', '始发站：省', '始发站：市', '发货客户名称', '发货客户手机', '货物类型']]
df5.to_csv('05.txt')


# #### 6.结合联防联控机制组文件，严守冷链输入风险，筑牢校园食品安全，各地区要求冷藏产品禁止进入校园，查找疑似“冷藏产品”进入校园的物流信息
# 思路：先筛选所有冷藏产品数据，然后检查冷藏产品的收货客户地址中是否含有“学校”、“大学”、“校区”等相关词。<br>
# 数据要求：运单编号 货运公司名称 收货客户名称 收货客户手机 收货客户地址（收件地址） <br>
# 保存文件：06.txt

# In[85]:


#df6=data[(data['货物类型']=='冷藏产品')& (data["收货客户地址（收件地址）"].str.contains("学校|⼤学|校区",na=False))]
df6 = data[(data['货物类型']=='冷藏产品')]
df6=df6[(df6["收货客户地址（收件地址）"].str.contains("大学|学校|校区"))]
df6=df6.loc[:,["运单编号","货运公司名称" ,"收货客户名称" ,"收货客户手机", "收货客户地址（收件地址）"]]
df6
df6.to_csv("06.txt")


# #### 7.对以往病例溯源中，发现部分病例曾接触境外快递，因此需要对数据中海外包裹进行重点追踪
# 思路：直接筛选海外发货数据<br>
# 数据要求：运单编号 货运公司名称 始发站：省 收货客户名称 收货客户手机 收货客户地址（收件地址） <br>
# 保存文件：07.txt

# In[82]:


df7 = data[data["始发站：省"].str.contains("海外")]
df7.head()
df7=df7.loc[:,["运单编号","货运公司名称" ,"始发站：省","收货客户名称" ,"收货客户手机", "收货客户地址（收件地址）"]]

df7.to_csv("07.txt")


# In[ ]:




