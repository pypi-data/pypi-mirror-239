{"version":3,"file":"asanaFieldView.js","names":["AsanaInlineEditorView","RB","InlineEditorView","extend","initialize","options","_this","_","defaults","hasRawValue","formatResult","value","name","htmlEncode","getFieldValue","editor","selectize","$field","selected","getValue","JSON","stringify","map","key","pick","isFieldDirty","initialValue","setFieldValue","prototype","call","createField","$","setupEvents","on","_scheduleUpdateDirtyState","bind","showEditor","arguments","length","undefined","focusOnOpen","focus","ReviewRequestFields","AsanaFieldView","TextFieldView","autocomplete","multiline","useEditIconOnly","taskTemplate","template","_formatField","fieldName","jsonFieldName","fieldID","opts","useExtraData","tasks","parse","model","getDraftField","_renderValue","_this2","lis","task","completed","workspaceId","workspace_id","taskId","gid","taskSummary","tagName","$el","html","concat","join","_getInlineEditorClass","_buildAutoComplete","_this3","reviewRequest","get","localSite","reviewRequestId","url","SITE_ROOT","inlineEditorView","data","forEach","String","id","copyClassesToDropdown","dropdownParent","labelField","valueField","multiple","items","optgroupLabelField","searchField","sortField","render","option","escape","load","query","callback","_this4","params","param","q","ajax","type","error","success","res","clearOptionGroups","i","group","addOptionGroup","workspace","j","optgroup","notesLines","notes","split","splice","push","refreshOptions"],"sources":["../../../../../../rbintegrations/static/js/asana/asanaFieldView.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * An inline editor view for selecting Asana tasks.\n */\nconst AsanaInlineEditorView = RB.InlineEditorView.extend({\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     */\n    initialize(options) {\n        options = _.defaults(options, {\n            hasRawValue: true,\n            formatResult: value => {\n                if (value && value.name) {\n                    return value.name.htmlEncode();\n                } else {\n                    return '';\n                }\n            },\n            getFieldValue: editor => {\n                const selectize = this.$field[0].selectize;\n                const selected = selectize.getValue();\n\n                return JSON.stringify(selected.map(\n                    key => _.pick(\n                        selectize.options[key],\n                        ['completed', 'gid', 'workspace_id', 'name'])));\n            },\n            isFieldDirty: (editor, initialValue) => {\n                const value = editor.getValue();\n                return initialValue !== value;\n            },\n            setFieldValue: (editor, value) => {\n                // This is a no-op, since we do this in the $.selectize call.\n            },\n        });\n\n        RB.InlineEditorView.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Create and return the field to use for the input element.\n     *\n     * Returns:\n     *     jQuery:\n     *     The newly created input element.\n     */\n    createField() {\n        return $('<select multiple class=\"asana-field\">');\n    },\n\n    /**\n     * Connect events.\n     */\n    setupEvents() {\n        RB.InlineEditorView.prototype.setupEvents.call(this);\n\n        this.$field.on('change', this._scheduleUpdateDirtyState.bind(this));\n    },\n\n    /**\n     * Show the editor.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for showing the editor.\n     */\n    showEditor(options={}) {\n        RB.InlineEditorView.prototype.showEditor.call(this, options);\n\n        if (this.options.focusOnOpen) {\n            this.$field[0].selectize.focus();\n        }\n    },\n});\n\n\n/**\n * A review request field view for selecting Asana tasks.\n */\nRB.ReviewRequestFields.AsanaFieldView =\n    RB.ReviewRequestFields.TextFieldView.extend({\n    autocomplete: {},\n    multiline: true,\n    useEditIconOnly: true,\n\n    taskTemplate: _.template(dedent`\n        <<%- tagName %> class=\"asana-task<% if (completed) { %> completed<% } %>\">\n         <a href=\"https://app.asana.com/0/<%- workspaceId %>/<%- taskId %>/\">\n          <div class=\"asana-task-checkbox\">\n           <svg viewBox=\"0 0 32 32\">'\n            <polygon points=\"27.672,4.786 10.901,21.557 4.328,14.984 1.5,17.812 10.901,27.214 30.5,7.615\"></polygon>\n           </svg>\n          </div>\n          <span><%- taskSummary %></span>\n         </a>\n        </<%- tagName %>>\n        `),\n\n    /**\n     * Format the contents of the field.\n     *\n     * This will apply the contents of the model attribute to the field\n     * element. If the field defines a ``formatValue`` method, this will use\n     * that to do the formatting. Otherwise, the element will just be set to\n     * contain the text of the value.\n     */\n    _formatField() {\n        const fieldName = this.jsonFieldName || this.fieldID;\n        const opts = { useExtraData: this.useExtraData };\n        const tasks = JSON.parse(this.model.getDraftField(fieldName, opts));\n        this._renderValue(tasks);\n    },\n\n    /**\n     * Render the current value of the field.\n     *\n     * Args:\n     *     tasks (Array of object):\n     *         The current value of the field.\n     */\n    _renderValue(tasks) {\n        const lis = tasks.map(task => this.taskTemplate({\n            completed: task.completed,\n            workspaceId: task.workspace_id,\n            taskId: task.gid,\n            taskSummary: task.name,\n            tagName: 'li',\n        }));\n\n        this.$el.html(`<ul>${lis.join('')}</ul>`);\n    },\n\n    /**\n     * Return the type to use for the inline editor view.\n     *\n     * Returns:\n     *     function:\n     *     The constructor for the inline editor class to instantiate.\n     */\n    _getInlineEditorClass() {\n        return AsanaInlineEditorView;\n    },\n\n    /**\n     * Add auto-complete functionality to the field.\n     */\n    _buildAutoComplete() {\n        const reviewRequest = this.model.get('reviewRequest');\n        const localSite = reviewRequest.get('localSitePrefix');\n        const reviewRequestId = reviewRequest.get('id');\n        const url = `${SITE_ROOT}rbintegrations/asana/${localSite}task-search/${reviewRequestId}/`;\n        const $field = this.inlineEditorView.$field;\n        const tasks = this.$el.data('raw-value');\n\n        tasks.forEach(task => {\n            if (task.gid === undefined) {\n                task.gid = String(task.id);\n            }\n        });\n\n        this._renderValue(tasks || []);\n\n        $field.selectize({\n            copyClassesToDropdown: true,\n            dropdownParent: 'body',\n            labelField: 'name',\n            valueField: 'gid',\n            multiple: true,\n            options: tasks,\n            items: tasks.map(task => task.gid),\n            optgroupLabelField: 'workspace',\n            searchField: 'name',\n            sortField: [\n                { 'field': 'completed' },\n                { 'field': 'name' },\n            ],\n            render: {\n                option: (data, escape) => {\n                    return this.taskTemplate({\n                        completed: data.completed,\n                        workspaceId: data.workspace_id,\n                        taskId: data.gid,\n                        taskSummary: data.name,\n                        tagName: 'div',\n                    });\n                }\n            },\n            load(query, callback) {\n                const params = $.param({ q: query });\n\n                $.ajax({\n                    url: `${url}?${params}`,\n                    type: 'GET',\n                    error: callback.bind(this),\n                    success: res => {\n                        const items = [];\n\n                        this.clearOptionGroups();\n\n                        for (let i = 0; i < res.length; i++) {\n                            const group = res[i];\n                            this.addOptionGroup(group.workspace, group);\n\n                            for (let j = 0; j < group.tasks.length; j++) {\n                                const task = group.tasks[j];\n                                task.optgroup = group.workspace;\n                                task.workspace_id = group.workspace_id;\n\n                                const notesLines = task.notes.split('\\n');\n                                task.notes = notesLines.splice(8).join('\\n');\n\n                                items.push(task);\n                            }\n                        }\n\n                        this.refreshOptions();\n                        callback(items);\n                    },\n                });\n            },\n        });\n    },\n});\n\n\n})();\n"],"mappings":"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"}