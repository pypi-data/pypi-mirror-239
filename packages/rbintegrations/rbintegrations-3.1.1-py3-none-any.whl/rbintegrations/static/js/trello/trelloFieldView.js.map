{"version":3,"file":"trelloFieldView.js","names":["TrelloInlineEditorView","RB","InlineEditorView","extend","initialize","options","_this","_","defaults","hasRawValue","formatResult","value","name","htmlEncode","getFieldValue","editor","selectize","$field","selected","getValue","JSON","stringify","map","key","isFieldDirty","initialValue","setFieldValue","prototype","call","createField","$","setupEvents","on","_scheduleUpdateDirtyState","bind","showEditor","arguments","length","undefined","focusOnOpen","focus","ReviewRequestFields","TrelloFieldView","TextFieldView","autocomplete","multiline","useEditIconOnly","cardTemplate","template","_formatField","cards","parse","model","getDraftField","jsonFieldName","fieldID","useExtraData","_renderValue","_this2","items","card","tagName","$el","html","concat","join","_getInlineEditorClass","_buildAutoComplete","_this3","reviewRequest","get","localSite","reviewRequestId","url","SITE_ROOT","inlineEditorView","data","copyClassesToDropdown","dropdownParent","multiple","labelField","valueField","searchField","pluck","render","option","escape","load","query","callback","params","param","q","ajax","type","error","success","res"],"sources":["../../../../../../rbintegrations/static/js/trello/trelloFieldView.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * An inline editor view for selecting Trello cards.\n */\nconst TrelloInlineEditorView = RB.InlineEditorView.extend({\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     */\n    initialize(options) {\n        options = _.defaults(options, {\n            hasRawValue: true,\n            formatResult: value => {\n                if (value && value.name) {\n                    return value.name.htmlEncode();\n                } else {\n                    return '';\n                }\n            },\n            getFieldValue: editor => {\n                const selectize = this.$field[0].selectize;\n                const selected = selectize.getValue();\n\n                return JSON.stringify(\n                    selected.map(key => selectize.options[key]));\n            },\n            isFieldDirty: (editor, initialValue) => {\n                const value = editor.getValue();\n                return (initialValue !== value);\n            },\n            setFieldValue: (editor, value) => {\n                // This is a no-op, since we do this in the $.selectize call.\n            },\n        });\n\n        RB.InlineEditorView.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Create and return the field to use for the input element.\n     *\n     * Returns:\n     *     jQuery:\n     *     The newly created input element.\n     */\n    createField() {\n        return $('<select multiple class=\"trello-field\">');\n    },\n\n    /**\n     * Connect events.\n     */\n    setupEvents() {\n        RB.InlineEditorView.prototype.setupEvents.call(this);\n\n        this.$field.on('change', this._scheduleUpdateDirtyState.bind(this));\n    },\n\n    /**\n     * Show the editor.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for showing the editor.\n     */\n    showEditor(options={}) {\n        RB.InlineEditorView.prototype.showEditor.call(this, options);\n\n        if (this.options.focusOnOpen) {\n            this.$field[0].selectize.focus();\n        }\n    },\n});\n\n\n/**\n * A review request field view for selecting Trello cards.\n */\nRB.ReviewRequestFields.TrelloFieldView =\n    RB.ReviewRequestFields.TextFieldView.extend({\n    autocomplete: {},\n    multiline: true,\n    useEditIconOnly: true,\n\n    cardTemplate: _.template(dedent`\n        <<%- tagName %> class=\"trello-card\">\n         <div class=\"trello-card-card\">\n          <a href=\"<%- url %>\"><%- name %></a>\n         </div>\n         <div class=\"trello-card-details\">\n          on <span class=\"trello-card-list\"><%- list %></span>\n          in <span class=\"trello-card-board\"><%- board %></span>\n         </div>\n        </<%- tagName %>>\n        `),\n\n    /**\n     * Format the contents of the field.\n     *\n     * This will apply the contents of the model attribute to the field\n     * element. If the field defines a ``formatValue`` method, this will use\n     * that to do the formatting. Otherwise, the element will just be set to\n     * contain the text of the value.\n     */\n    _formatField() {\n        const cards = JSON.parse(this.model.getDraftField(\n            this.jsonFieldName || this.fieldID, {\n                useExtraData: this.useExtraData,\n            }));\n        this._renderValue(cards);\n    },\n\n    /**\n     * Render the current value of the field.\n     *\n     * Args:\n     *     cards (Array of object):\n     *         The current set of cards to list.\n     */\n    _renderValue(cards) {\n        const items = cards.map(card => this.cardTemplate(_.defaults({\n            tagName: 'li',\n        }, card)));\n        this.$el.html(`<ul>${items.join('')}</ul>`);\n    },\n\n    /**\n     * Return the type to use for the inline editor view.\n     *\n     * Returns:\n     *     function:\n     *     The constructor for the inline editor class to instantiate.\n     */\n    _getInlineEditorClass() {\n        return TrelloInlineEditorView;\n    },\n\n    /**\n     * Add auto-complete functionality to the field.\n     */\n    _buildAutoComplete() {\n        const reviewRequest = this.model.get('reviewRequest');\n        const localSite = reviewRequest.get('localSitePrefix');\n        const reviewRequestId = reviewRequest.get('id');\n        const url = `${SITE_ROOT}rbintegrations/trello/${localSite}card-search/${reviewRequestId}/`;\n        const $field = this.inlineEditorView.$field;\n        const cards = this.$el.data('raw-value');\n\n        this._renderValue(cards || []);\n\n        $field.selectize({\n            copyClassesToDropdown: true,\n            dropdownParent: 'body',\n            multiple: true,\n            labelField: 'name',\n            valueField: 'id',\n            searchField: 'name',\n            options: cards,\n            items: _.pluck(cards, 'id'),\n            render: {\n                option: (data, escape) => this.cardTemplate(_.defaults({\n                    tagName: 'div',\n                }, data)),\n            },\n            load(query, callback) {\n                const params = $.param({ q: query });\n\n                $.ajax({\n                    url: `${url}?${params}`,\n                    type: 'GET',\n                    error: callback.bind(this),\n                    success: res => callback(res),\n                });\n            },\n        });\n    },\n});\n\n\n})();\n"],"mappings":"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"}