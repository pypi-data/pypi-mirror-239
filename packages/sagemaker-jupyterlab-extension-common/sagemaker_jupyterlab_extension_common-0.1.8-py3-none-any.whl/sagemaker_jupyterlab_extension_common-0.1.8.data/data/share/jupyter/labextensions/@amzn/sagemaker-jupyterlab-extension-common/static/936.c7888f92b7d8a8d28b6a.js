"use strict";(self.webpackChunk_amzn_sagemaker_jupyterlab_extension_common=self.webpackChunk_amzn_sagemaker_jupyterlab_extension_common||[]).push([[936],{936:(e,t,r)=>{r.r(t),r.d(t,{ILogger:()=>u,default:()=>y,logSchemas:()=>i});var a=r(976),o=r(858);const s="@amzn/sagemaker-jupyterlab-extension-common:logger",n=[200,201],i={operationalLogger:{schemaId:"http://sagemaker.studio.jupyterlab.ui.log.schema",schemaVersion:1},performance:{schemaId:"http://sagemaker.studio.jupyterlab.ui.performance.schema",schemaVersion:1}},c=Object.keys(i).map((e=>i[e].schemaId)),m="__INJECT__";var h;!function(e){e.POST="POST",e.GET="GET"}(h||(h={}));const d={id:"@amzn/sagemaker-jupyterlab-extension-common:panorama",autoStart:!0,activate:e=>{(async e=>{try{await e.started;const t=document.getElementById("main"),r=await(async(e,t)=>{const r=a.ServerConnection.makeSettings(),s=o.URLExt.join(r.baseUrl,"/aws/sagemaker/api/context");try{const e=await a.ServerConnection.makeRequest(s,{method:t},r);if(!n.includes(e.status))throw new Error("Unable to fetch data");return e}catch(e){throw Error(e)}})(0,h.GET),s=(await r.json()).region;if(!t)throw new Error("JupyterLab application or region not found in DOM");(e=>{if(!e)throw new Error("Failed to get region");const t=document.createElement("script");t.src="https://prod.pa.cdn.uis.awsstatic.com/panorama-nav-init.js",t.id="awsc-panorama-bundle",t.type="text/javascript",t.setAttribute("data-config",`{"appEntity": "aws-sagemaker", "region": "${e}", "service" :"sagemaker-jupyterlab"}`),document.head.appendChild(t)})(s)}catch(e){}})(e)}};var g,l=r(930);!function(e){e.TRACE="TRACE",e.DEBUG="DEBUG",e.INFO="INFO",e.WARN="WARN",e.ERROR="ERROR",e.FATAL="FATAL"}(g||(g={}));const u=new l.Token(s);var p=r(13),w=r(321),v=r.n(w);class E{constructor(e,t,r){this.trace=e=>this.record(e,g.TRACE),this.debug=e=>this.record(e,g.DEBUG),this.info=e=>this.record(e,g.INFO),this.warn=e=>this.record(e,g.WARN),this.error=e=>this.record(e,g.ERROR),this.fatal=e=>this.record(e,g.FATAL),this.child=(e,t)=>{const r=t||this.schema;return new E(this.eventLog,r,{...this.context,...e})},this.eventLog=e,this.schema=t,this.context={...r,AccountId:m,SpaceName:m}}format(e,t){if("Error"in e&&void 0!==e.Error){const r={...e,Name:e.Error.name,Message:e.Error.message,Stack:e.Error.stack,Level:t,Context:this.context};return delete e.Error,r}return{...e,Level:t,Context:this.context}}record(e,t){return this.eventLog.recordEvent({version:this.schema.schemaVersion,schema:this.schema.schemaId,body:this.format(e,t)})}}var f=r(768);const y=[d,{id:s,autoStart:!0,provides:u,activate:e=>{const t={SessionId:(e=>{const t=window.sessionStorage.getItem(e);let r;return null==t?(r={id:(0,p.v4)(),startTime:(new Date).toISOString()},window.sessionStorage.setItem(e,JSON.stringify(r))):r=JSON.parse(t),r})(s).id},r=((e,t,r)=>{const s=[],n=()=>{((e,t)=>{const r=o.PageConfig.getBaseUrl(),s=`${r}aws/sagemaker/api/eventlog`,n=a.ServerConnection.makeSettings({baseUrl:r}),i={method:"POST",body:JSON.stringify({events:e})},c={retries:t,onFailedAttempt:e=>{console.warn({message:`Deliver events attempt (${e.attemptNumber}) with (${e.retriesLeft}) retries remaining.`,error:e})}};v()((async()=>{let e;try{e=await a.ServerConnection.makeRequest(s,i,n)}catch(e){throw e instanceof TypeError&&Object.setPrototypeOf(e,Error.prototype),e}if(!e.ok)throw new Error(e.statusText)}),c).catch((t=>{console.error({message:`Failed to deliver events after (${c.retries}) retries.`,error:t,events:e})}))})(s.splice(0),e)};return setInterval(n,t),(e,t)=>{const a=r-s.length;s.push(...t.slice(0,a)),t.length>a&&(n(),console.log("Logger plugin max buffer size exceeded."))}})(2,5e3,1e4),n=new f.EventLog({allowedSchemas:c,handlers:[r]});return new E(n,i.operationalLogger,t)}}]}}]);