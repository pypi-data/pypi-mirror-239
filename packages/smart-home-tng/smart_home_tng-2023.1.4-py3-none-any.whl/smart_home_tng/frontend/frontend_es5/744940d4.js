(self.webpackChunkhome_assistant_frontend=self.webpackChunkhome_assistant_frontend||[]).push([[66043],{20122:function(e,i,a){e.exports=a(52461)},58831:function(e,i,a){"use strict";a.d(i,{M:function(){return n}});var n=function(e){return e.substr(0,e.indexOf("."))}},22311:function(e,i,a){"use strict";a.d(i,{N:function(){return r}});var n=a(58831),r=function(e){return(0,n.M)(e.entity_id)}},47981:function(e,i,a){"use strict";a.r(i);a(51187),a(49842);var n=a(37500),r=a(33310),t=a(14516),o=a(47181);function c(e,i){var a="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!a){if(Array.isArray(e)||(a=function(e,i){if(!e)return;if("string"==typeof e)return s(e,i);var a=Object.prototype.toString.call(e).slice(8,-1);"Object"===a&&e.constructor&&(a=e.constructor.name);if("Map"===a||"Set"===a)return Array.from(e);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return s(e,i)}(e))||i&&e&&"number"==typeof e.length){a&&(e=a);var n=0,r=function(){};return{s:r,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var t,o=!0,c=!1;return{s:function(){a=a.call(e)},n:function(){var e=a.next();return o=e.done,e},e:function(e){c=!0,t=e},f:function(){try{o||null==a.return||a.return()}finally{if(c)throw t}}}}function s(e,i){(null==i||i>e.length)&&(i=e.length);for(var a=0,n=new Array(i);a<i;a++)n[a]=e[a];return n}var l,u,d,f,m=["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYN","BYR","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XCD","XOF","XPF","YER","ZAR","ZMK","ZWL"],h=(a(48456),a(20122)),p=a(55164),T=a(76307);a(33220),a(83927);function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}function G(e,i,a,n,r,t,o){try{var c=e[t](o),s=c.value}catch(l){return void a(l)}c.done?i(s):Promise.resolve(s).then(n,r)}function y(e){return function(){var i=this,a=arguments;return new Promise((function(n,r){var t=e.apply(i,a);function o(e){G(t,n,r,o,c,"next",e)}function c(e){G(t,n,r,o,c,"throw",e)}o(void 0)}))}}function v(e,i){return i||(i=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(i)}}))}function A(e,i){if(!(e instanceof i))throw new TypeError("Cannot call a class as a function")}function g(e,i){return g=Object.setPrototypeOf||function(e,i){return e.__proto__=i,e},g(e,i)}function k(e){var i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=z(e);if(i){var r=z(this).constructor;a=Reflect.construct(n,arguments,r)}else a=n.apply(this,arguments);return b(this,a)}}function b(e,i){if(i&&("object"===M(i)||"function"==typeof i))return i;if(void 0!==i)throw new TypeError("Derived constructors may only return object or undefined");return _(e)}function _(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function w(){w=function(){return e};var e={elementsDefinitionOrder:[["method"],["field"]],initializeInstanceElements:function(e,i){["method","field"].forEach((function(a){i.forEach((function(i){i.kind===a&&"own"===i.placement&&this.defineClassElement(e,i)}),this)}),this)},initializeClassElements:function(e,i){var a=e.prototype;["method","field"].forEach((function(n){i.forEach((function(i){var r=i.placement;if(i.kind===n&&("static"===r||"prototype"===r)){var t="static"===r?e:a;this.defineClassElement(t,i)}}),this)}),this)},defineClassElement:function(e,i){var a=i.descriptor;if("field"===i.kind){var n=i.initializer;a={enumerable:a.enumerable,writable:a.writable,configurable:a.configurable,value:void 0===n?void 0:n.call(e)}}Object.defineProperty(e,i.key,a)},decorateClass:function(e,i){var a=[],n=[],r={static:[],prototype:[],own:[]};if(e.forEach((function(e){this.addElementPlacement(e,r)}),this),e.forEach((function(e){if(!S(e))return a.push(e);var i=this.decorateElement(e,r);a.push(i.element),a.push.apply(a,i.extras),n.push.apply(n,i.finishers)}),this),!i)return{elements:a,finishers:n};var t=this.decorateConstructor(a,i);return n.push.apply(n,t.finishers),t.finishers=n,t},addElementPlacement:function(e,i,a){var n=i[e.placement];if(!a&&-1!==n.indexOf(e.key))throw new TypeError("Duplicated element ("+e.key+")");n.push(e.key)},decorateElement:function(e,i){for(var a=[],n=[],r=e.decorators,t=r.length-1;t>=0;t--){var o=i[e.placement];o.splice(o.indexOf(e.key),1);var c=this.fromElementDescriptor(e),s=this.toElementFinisherExtras((0,r[t])(c)||c);e=s.element,this.addElementPlacement(e,i),s.finisher&&n.push(s.finisher);var l=s.extras;if(l){for(var u=0;u<l.length;u++)this.addElementPlacement(l[u],i);a.push.apply(a,l)}}return{element:e,finishers:n,extras:a}},decorateConstructor:function(e,i){for(var a=[],n=i.length-1;n>=0;n--){var r=this.fromClassDescriptor(e),t=this.toClassDescriptor((0,i[n])(r)||r);if(void 0!==t.finisher&&a.push(t.finisher),void 0!==t.elements){e=t.elements;for(var o=0;o<e.length-1;o++)for(var c=o+1;c<e.length;c++)if(e[o].key===e[c].key&&e[o].placement===e[c].placement)throw new TypeError("Duplicated element ("+e[o].key+")")}}return{elements:e,finishers:a}},fromElementDescriptor:function(e){var i={kind:e.kind,key:e.key,placement:e.placement,descriptor:e.descriptor};return Object.defineProperty(i,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),"field"===e.kind&&(i.initializer=e.initializer),i},toElementDescriptors:function(e){var i;if(void 0!==e)return(i=e,function(e){if(Array.isArray(e))return e}(i)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(i)||function(e,i){if(e){if("string"==typeof e)return R(e,i);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?R(e,i):void 0}}(i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(e){var i=this.toElementDescriptor(e);return this.disallowProperty(e,"finisher","An element descriptor"),this.disallowProperty(e,"extras","An element descriptor"),i}),this)},toElementDescriptor:function(e){var i=String(e.kind);if("method"!==i&&"field"!==i)throw new TypeError('An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "'+i+'"');var a=B(e.key),n=String(e.placement);if("static"!==n&&"prototype"!==n&&"own"!==n)throw new TypeError('An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "'+n+'"');var r=e.descriptor;this.disallowProperty(e,"elements","An element descriptor");var t={kind:i,key:a,placement:n,descriptor:Object.assign({},r)};return"field"!==i?this.disallowProperty(e,"initializer","A method descriptor"):(this.disallowProperty(r,"get","The property descriptor of a field descriptor"),this.disallowProperty(r,"set","The property descriptor of a field descriptor"),this.disallowProperty(r,"value","The property descriptor of a field descriptor"),t.initializer=e.initializer),t},toElementFinisherExtras:function(e){return{element:this.toElementDescriptor(e),finisher:D(e,"finisher"),extras:this.toElementDescriptors(e.extras)}},fromClassDescriptor:function(e){var i={kind:"class",elements:e.map(this.fromElementDescriptor,this)};return Object.defineProperty(i,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),i},toClassDescriptor:function(e){var i=String(e.kind);if("class"!==i)throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "'+i+'"');this.disallowProperty(e,"key","A class descriptor"),this.disallowProperty(e,"placement","A class descriptor"),this.disallowProperty(e,"descriptor","A class descriptor"),this.disallowProperty(e,"initializer","A class descriptor"),this.disallowProperty(e,"extras","A class descriptor");var a=D(e,"finisher");return{elements:this.toElementDescriptors(e.elements),finisher:a}},runClassFinishers:function(e,i){for(var a=0;a<i.length;a++){var n=(0,i[a])(e);if(void 0!==n){if("function"!=typeof n)throw new TypeError("Finishers must return a constructor.");e=n}}return e},disallowProperty:function(e,i,a){if(void 0!==e[i])throw new TypeError(a+" can't have a ."+i+" property.")}};return e}function P(e){var i,a=B(e.key);"method"===e.kind?i={value:e.value,writable:!0,configurable:!0,enumerable:!1}:"get"===e.kind?i={get:e.value,configurable:!0,enumerable:!1}:"set"===e.kind?i={set:e.value,configurable:!0,enumerable:!1}:"field"===e.kind&&(i={configurable:!0,writable:!0,enumerable:!0});var n={kind:"field"===e.kind?"field":"method",key:a,placement:e.static?"static":"field"===e.kind?"own":"prototype",descriptor:i};return e.decorators&&(n.decorators=e.decorators),"field"===e.kind&&(n.initializer=e.value),n}function E(e,i){void 0!==e.descriptor.get?i.descriptor.get=e.descriptor.get:i.descriptor.set=e.descriptor.set}function S(e){return e.decorators&&e.decorators.length}function C(e){return void 0!==e&&!(void 0===e.value&&void 0===e.writable)}function D(e,i){var a=e[i];if(void 0!==a&&"function"!=typeof a)throw new TypeError("Expected '"+i+"' to be a function");return a}function B(e){var i=function(e,i){if("object"!==M(e)||null===e)return e;var a=e[Symbol.toPrimitive];if(void 0!==a){var n=a.call(e,i||"default");if("object"!==M(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===i?String:Number)(e)}(e,"string");return"symbol"===M(i)?i:String(i)}function R(e,i){(null==i||i>e.length)&&(i=e.length);for(var a=0,n=new Array(i);a<i;a++)n[a]=e[a];return n}function x(e,i,a){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,i,a){var n=function(e,i){for(;!Object.prototype.hasOwnProperty.call(e,i)&&null!==(e=z(e)););return e}(e,i);if(n){var r=Object.getOwnPropertyDescriptor(n,i);return r.get?r.get.call(a):r.value}},x(e,i,a||e)}function z(e){return z=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},z(e)}var K=[52.3731339,4.8903147],N=matchMedia("(prefers-color-scheme: dark)"),L="location";!function(e,i,a,n){var r=w();if(n)for(var t=0;t<n.length;t++)r=n[t](r);var o=i((function(e){r.initializeInstanceElements(e,c.elements)}),a),c=r.decorateClass(function(e){for(var i=[],a=function(e){return"method"===e.kind&&e.key===t.key&&e.placement===t.placement},n=0;n<e.length;n++){var r,t=e[n];if("method"===t.kind&&(r=i.find(a)))if(C(t.descriptor)||C(r.descriptor)){if(S(t)||S(r))throw new ReferenceError("Duplicated methods ("+t.key+") can't be decorated.");r.descriptor=t.descriptor}else{if(S(t)){if(S(r))throw new ReferenceError("Decorators can't be placed on different accessors with for the same property ("+t.key+").");r.decorators=t.decorators}E(t,r)}else i.push(t)}return i}(o.d.map(P)),e);r.initializeClassElements(o.F,c.elements),r.runClassFinishers(o.F,c.finishers)}([(0,r.Mo)("onboarding-core-config")],(function(e,i){var a,s,M=function(i){!function(e,i){if("function"!=typeof i&&null!==i)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(i&&i.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),i&&g(e,i)}(n,i);var a=k(n);function n(){var i;A(this,n);for(var r=arguments.length,t=new Array(r),o=0;o<r;o++)t[o]=arguments[o];return i=a.call.apply(a,[this].concat(t)),e(_(i)),i}return n}(i);return{F:M,d:[{kind:"field",decorators:[(0,r.Cb)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,r.Cb)()],key:"onboardingLocalize",value:void 0},{kind:"field",decorators:[(0,r.SB)()],key:"_working",value:function(){return!1}},{kind:"field",decorators:[(0,r.SB)()],key:"_name",value:void 0},{kind:"field",decorators:[(0,r.SB)()],key:"_location",value:void 0},{kind:"field",decorators:[(0,r.SB)()],key:"_elevation",value:void 0},{kind:"field",decorators:[(0,r.SB)()],key:"_unitSystem",value:void 0},{kind:"field",decorators:[(0,r.SB)()],key:"_currency",value:void 0},{kind:"field",decorators:[(0,r.SB)()],key:"_timeZone",value:void 0},{kind:"field",decorators:[(0,r.IO)("ha-locations-editor",!0)],key:"map",value:void 0},{kind:"method",key:"render",value:function(){return(0,n.dy)(l||(l=v(["\n      <p>\n        ","\n      </p>\n\n      <paper-input\n        .label=",'\n        name="name"\n        .disabled=',"\n        .value=","\n        @value-changed=",'\n      ></paper-input>\n\n      <div class="middle-text">\n        <p>\n          ','\n        </p>\n\n        <div class="row">\n          <div>\n            ',"\n          </div>\n          <mwc-button @click=",">\n            ",'\n          </mwc-button>\n        </div>\n      </div>\n\n      <div class="row">\n        <ha-locations-editor\n          class="flex"\n          .hass=',"\n          .locations=",'\n          zoom="14"\n          .darkMode=',"\n          @location-updated=",'\n        ></ha-locations-editor>\n      </div>\n\n      <div class="row">\n        <paper-input\n          class="flex"\n          .label=','\n          name="timeZone"\n          list="timezones"\n          .disabled=',"\n          .value=","\n          @value-changed=",'\n        ></paper-input>\n\n        <paper-input\n          class="flex"\n          .label=','\n          name="elevation"\n          type="number"\n          .disabled=',"\n          .value=","\n          @value-changed=",'\n        >\n          <span slot="suffix">\n            ','\n          </span>\n        </paper-input>\n      </div>\n\n      <div class="row">\n        <div class="flex">\n          ','\n        </div>\n        <div class="radio-group">\n          <ha-formfield\n            .label=','\n          >\n            <ha-radio\n              name="unit_system"\n              value="metric"\n              .checked=',"\n              @change=","\n              .disabled=","\n            ></ha-radio>\n          </ha-formfield>\n          <ha-formfield\n            .label=",'\n          >\n            <ha-radio\n              name="unit_system"\n              value="imperial"\n              .checked=',"\n              @change=","\n              .disabled=",'\n            ></ha-radio>\n          </ha-formfield>\n        </div>\n      </div>\n\n      <div class="row">\n            <div class="flex">\n              ','<br />\n              <a\n                href="https://en.wikipedia.org/wiki/ISO_4217#Active_codes"\n                target="_blank"\n                rel="noopener noreferrer"\n                >','</a\n              >\n            </div>\n\n            <paper-input\n              class="flex"\n              .label=','\n              name="currency"\n              list="currencies"\n              .disabled=',"\n              .value=","\n              @value-changed=",'\n            ></paper-input>\n          </div>\n        </div>\n\n      <div class="footer">\n        <mwc-button @click='," .disabled=",">\n          ","\n        </mwc-button>\n      </div>\n    "])),this.onboardingLocalize("ui.panel.page-onboarding.core-config.intro","name",this.hass.user.name),this.onboardingLocalize("ui.panel.page-onboarding.core-config.location_name"),this._working,this._nameValue,this._handleChange,this.onboardingLocalize("ui.panel.page-onboarding.core-config.intro_location"),this.onboardingLocalize("ui.panel.page-onboarding.core-config.intro_location_detect"),this._detect,this.onboardingLocalize("ui.panel.page-onboarding.core-config.button_detect"),this.hass,this._markerLocation(this._locationValue),N.matches,this._locationChanged,this.hass.localize("ui.panel.config.core.section.core.core_config.time_zone"),this._working,this._timeZoneValue,this._handleChange,this.hass.localize("ui.panel.config.core.section.core.core_config.elevation"),this._working,this._elevationValue,this._handleChange,this.hass.localize("ui.panel.config.core.section.core.core_config.elevation_meters"),this.hass.localize("ui.panel.config.core.section.core.core_config.unit_system"),(0,n.dy)(u||(u=v(["",'\n              <div class="secondary">\n                ',"\n              </div>"])),this.hass.localize("ui.panel.config.core.section.core.core_config.unit_system_metric"),this.hass.localize("ui.panel.config.core.section.core.core_config.metric_example")),"metric"===this._unitSystemValue,this._unitSystemChanged,this._working,(0,n.dy)(d||(d=v(["",'\n              <div class="secondary">\n                ',"\n              </div>"])),this.hass.localize("ui.panel.config.core.section.core.core_config.unit_system_imperial"),this.hass.localize("ui.panel.config.core.section.core.core_config.imperial_example")),"imperial"===this._unitSystemValue,this._unitSystemChanged,this._working,this.hass.localize("ui.panel.config.core.section.core.core_config.currency"),this.hass.localize("ui.panel.config.core.section.core.core_config.find_currency_value"),this.hass.localize("ui.panel.config.core.section.core.core_config.currency"),this._working,this._currencyValue,this._handleChange,this._save,this._working,this.onboardingLocalize("ui.panel.page-onboarding.core-config.finish"))}},{kind:"method",key:"firstUpdated",value:function(e){var i,a=this;x(z(M.prototype),"firstUpdated",this).call(this,e),setTimeout((function(){return a.shadowRoot.querySelector("paper-input").focus()}),100),this.addEventListener("keypress",(function(e){13===e.keyCode&&a._save(e)})),this.shadowRoot.querySelector("[name=timeZone]").inputElement.appendChild(((i=document.createElement("datalist")).id="timezones",Object.keys(h).forEach((function(e){var a=document.createElement("option");a.value=e,a.innerHTML=h[e],i.appendChild(a)})),i)),this.shadowRoot.querySelector("[name=currency]").inputElement.appendChild(function(){var e=document.createElement("datalist");e.id="currencies";var i,a=c(m);try{for(a.s();!(i=a.n()).done;){var n=i.value,r=document.createElement("option");r.value=n,r.innerHTML=n,e.appendChild(r)}}catch(t){a.e(t)}finally{a.f()}return e}())}},{kind:"get",key:"_nameValue",value:function(){return void 0!==this._name?this._name:this.onboardingLocalize("ui.panel.page-onboarding.core-config.location_name_default")}},{kind:"get",key:"_locationValue",value:function(){return this._location||K}},{kind:"get",key:"_elevationValue",value:function(){return void 0!==this._elevation?this._elevation:0}},{kind:"get",key:"_timeZoneValue",value:function(){return this._timeZone}},{kind:"get",key:"_unitSystemValue",value:function(){return void 0!==this._unitSystem?this._unitSystem:"metric"}},{kind:"get",key:"_currencyValue",value:function(){return void 0!==this._currency?this._currency:""}},{kind:"field",key:"_markerLocation",value:function(){return(0,t.Z)((function(e){return[{id:L,latitude:e[0],longitude:e[1],location_editable:!0}]}))}},{kind:"method",key:"_handleChange",value:function(e){var i=e.currentTarget,a=i.value;"currency"===i.name&&a&&a in p.L&&(a=p.L[a]),this["_".concat(i.name)]=a}},{kind:"method",key:"_locationChanged",value:function(e){this._location=e.detail.location}},{kind:"method",key:"_unitSystemChanged",value:function(e){this._unitSystem=e.target.value}},{kind:"method",key:"_detect",value:(s=y(regeneratorRuntime.mark((function e(){var i,a=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this._working=!0,e.prev=1,e.next=4,this.hass.callWS({type:"config/core/detect"});case 4:(i=e.sent).latitude&&i.longitude&&(this.map.addEventListener("markers-updated",(function(){a.map.fitMarker(L)}),{once:!0}),this._location=[Number(i.latitude),Number(i.longitude)]),i.elevation&&(this._elevation=String(i.elevation)),i.unit_system&&(this._unitSystem=i.unit_system),i.time_zone&&(this._timeZone=i.time_zone),i.currency&&(this._currency=i.currency),e.next=15;break;case 12:e.prev=12,e.t0=e.catch(1),alert("Failed to detect location information: ".concat(e.t0.message));case 15:return e.prev=15,this._working=!1,e.finish(15);case 18:case"end":return e.stop()}}),e,this,[[1,12,15,18]])}))),function(){return s.apply(this,arguments)})},{kind:"method",key:"_save",value:(a=y(regeneratorRuntime.mark((function e(i){var a,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return i.preventDefault(),this._working=!0,e.prev=2,a=this._locationValue,e.next=6,r=this.hass,t={location_name:this._nameValue,latitude:a[0],longitude:a[1],elevation:Number(this._elevationValue),unit_system:this._unitSystemValue,time_zone:this._timeZoneValue||"UTC",currency:this._currencyValue||"EUR"},r.callWS(Object.assign({type:"config/core/update"},t));case 6:return e.next=8,(0,T.Rj)(this.hass);case 8:n=e.sent,(0,o.B)(this,"onboarding-step",{type:"core_config",result:n}),e.next=16;break;case 12:e.prev=12,e.t0=e.catch(2),this._working=!1,alert("Failed to save: ".concat(e.t0.message));case 16:case"end":return e.stop()}var r,t}),e,this,[[2,12]])}))),function(e){return a.apply(this,arguments)})},{kind:"get",static:!0,key:"styles",value:function(){return(0,n.iv)(f||(f=v(["\n      .row {\n        display: flex;\n        flex-direction: row;\n        margin: 0 -8px;\n        align-items: center;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n\n      ha-locations-editor {\n        height: 200px;\n      }\n\n      .flex {\n        flex: 1;\n      }\n\n      .middle-text {\n        margin: 24px 0;\n      }\n\n      .row > * {\n        margin: 0 8px;\n      }\n\n      .radio-group {\n        display: flex;\n        flex-direction: column;\n        flex: 1;\n      }\n\n      .footer {\n        margin-top: 16px;\n        text-align: right;\n      }\n      a {\n        color: var(--primary-color);\n      }\n    "])))}}]}}),n.oi)},52461:function(e){"use strict";e.exports=JSON.parse('{"Pacific/Niue":"(GMT-11:00) Niue","Pacific/Pago_Pago":"(GMT-11:00) Pago Pago","Pacific/Honolulu":"(GMT-10:00) Hawaii Time","Pacific/Rarotonga":"(GMT-10:00) Rarotonga","Pacific/Tahiti":"(GMT-10:00) Tahiti","Pacific/Marquesas":"(GMT-09:30) Marquesas","America/Anchorage":"(GMT-09:00) Alaska Time","Pacific/Gambier":"(GMT-09:00) Gambier","America/Los_Angeles":"(GMT-08:00) Pacific Time","America/Tijuana":"(GMT-08:00) Pacific Time - Tijuana","America/Vancouver":"(GMT-08:00) Pacific Time - Vancouver","America/Whitehorse":"(GMT-08:00) Pacific Time - Whitehorse","Pacific/Pitcairn":"(GMT-08:00) Pitcairn","America/Dawson_Creek":"(GMT-07:00) Mountain Time - Dawson Creek","America/Denver":"(GMT-07:00) Mountain Time","America/Edmonton":"(GMT-07:00) Mountain Time - Edmonton","America/Hermosillo":"(GMT-07:00) Mountain Time - Hermosillo","America/Mazatlan":"(GMT-07:00) Mountain Time - Chihuahua, Mazatlan","America/Phoenix":"(GMT-07:00) Mountain Time - Arizona","America/Yellowknife":"(GMT-07:00) Mountain Time - Yellowknife","America/Belize":"(GMT-06:00) Belize","America/Chicago":"(GMT-06:00) Central Time","America/Costa_Rica":"(GMT-06:00) Costa Rica","America/El_Salvador":"(GMT-06:00) El Salvador","America/Guatemala":"(GMT-06:00) Guatemala","America/Managua":"(GMT-06:00) Managua","America/Mexico_City":"(GMT-06:00) Central Time - Mexico City","America/Regina":"(GMT-06:00) Central Time - Regina","America/Tegucigalpa":"(GMT-06:00) Central Time - Tegucigalpa","America/Winnipeg":"(GMT-06:00) Central Time - Winnipeg","Pacific/Galapagos":"(GMT-06:00) Galapagos","America/Bogota":"(GMT-05:00) Bogota","America/Cancun":"(GMT-05:00) America Cancun","America/Cayman":"(GMT-05:00) Cayman","America/Guayaquil":"(GMT-05:00) Guayaquil","America/Havana":"(GMT-05:00) Havana","America/Iqaluit":"(GMT-05:00) Eastern Time - Iqaluit","America/Jamaica":"(GMT-05:00) Jamaica","America/Lima":"(GMT-05:00) Lima","America/Nassau":"(GMT-05:00) Nassau","America/New_York":"(GMT-05:00) Eastern Time","America/Panama":"(GMT-05:00) Panama","America/Port-au-Prince":"(GMT-05:00) Port-au-Prince","America/Rio_Branco":"(GMT-05:00) Rio Branco","America/Toronto":"(GMT-05:00) Eastern Time - Toronto","Pacific/Easter":"(GMT-05:00) Easter Island","America/Caracas":"(GMT-04:30) Caracas","America/Asuncion":"(GMT-03:00) Asuncion","America/Barbados":"(GMT-04:00) Barbados","America/Boa_Vista":"(GMT-04:00) Boa Vista","America/Campo_Grande":"(GMT-03:00) Campo Grande","America/Cuiaba":"(GMT-03:00) Cuiaba","America/Curacao":"(GMT-04:00) Curacao","America/Grand_Turk":"(GMT-04:00) Grand Turk","America/Guyana":"(GMT-04:00) Guyana","America/Halifax":"(GMT-04:00) Atlantic Time - Halifax","America/La_Paz":"(GMT-04:00) La Paz","America/Manaus":"(GMT-04:00) Manaus","America/Martinique":"(GMT-04:00) Martinique","America/Port_of_Spain":"(GMT-04:00) Port of Spain","America/Porto_Velho":"(GMT-04:00) Porto Velho","America/Puerto_Rico":"(GMT-04:00) Puerto Rico","America/Santo_Domingo":"(GMT-04:00) Santo Domingo","America/Thule":"(GMT-04:00) Thule","Atlantic/Bermuda":"(GMT-04:00) Bermuda","America/St_Johns":"(GMT-03:30) Newfoundland Time - St. Johns","America/Araguaina":"(GMT-03:00) Araguaina","America/Argentina/Buenos_Aires":"(GMT-03:00) Buenos Aires","America/Bahia":"(GMT-03:00) Salvador","America/Belem":"(GMT-03:00) Belem","America/Cayenne":"(GMT-03:00) Cayenne","America/Fortaleza":"(GMT-03:00) Fortaleza","America/Godthab":"(GMT-03:00) Godthab","America/Maceio":"(GMT-03:00) Maceio","America/Miquelon":"(GMT-03:00) Miquelon","America/Montevideo":"(GMT-03:00) Montevideo","America/Paramaribo":"(GMT-03:00) Paramaribo","America/Recife":"(GMT-03:00) Recife","America/Santiago":"(GMT-03:00) Santiago","America/Sao_Paulo":"(GMT-02:00) Sao Paulo","Antarctica/Palmer":"(GMT-03:00) Palmer","Antarctica/Rothera":"(GMT-03:00) Rothera","Atlantic/Stanley":"(GMT-03:00) Stanley","America/Noronha":"(GMT-02:00) Noronha","Atlantic/South_Georgia":"(GMT-02:00) South Georgia","America/Scoresbysund":"(GMT-01:00) Scoresbysund","Atlantic/Azores":"(GMT-01:00) Azores","Atlantic/Cape_Verde":"(GMT-01:00) Cape Verde","Africa/Abidjan":"(GMT+00:00) Abidjan","Africa/Accra":"(GMT+00:00) Accra","Africa/Bissau":"(GMT+00:00) Bissau","Africa/Casablanca":"(GMT+00:00) Casablanca","Africa/El_Aaiun":"(GMT+00:00) El Aaiun","Africa/Monrovia":"(GMT+00:00) Monrovia","America/Danmarkshavn":"(GMT+00:00) Danmarkshavn","Atlantic/Canary":"(GMT+00:00) Canary Islands","Atlantic/Faroe":"(GMT+00:00) Faeroe","Atlantic/Reykjavik":"(GMT+00:00) Reykjavik","Etc/GMT":"(GMT+00:00) GMT (no daylight saving)","Europe/Dublin":"(GMT+00:00) Dublin","Europe/Lisbon":"(GMT+00:00) Lisbon","Europe/London":"(GMT+00:00) London","Africa/Algiers":"(GMT+01:00) Algiers","Africa/Ceuta":"(GMT+01:00) Ceuta","Africa/Lagos":"(GMT+01:00) Lagos","Africa/Ndjamena":"(GMT+01:00) Ndjamena","Africa/Tunis":"(GMT+01:00) Tunis","Africa/Windhoek":"(GMT+02:00) Windhoek","Europe/Amsterdam":"(GMT+01:00) Amsterdam","Europe/Andorra":"(GMT+01:00) Andorra","Europe/Belgrade":"(GMT+01:00) Central European Time - Belgrade","Europe/Berlin":"(GMT+01:00) Berlin","Europe/Brussels":"(GMT+01:00) Brussels","Europe/Budapest":"(GMT+01:00) Budapest","Europe/Copenhagen":"(GMT+01:00) Copenhagen","Europe/Gibraltar":"(GMT+01:00) Gibraltar","Europe/Luxembourg":"(GMT+01:00) Luxembourg","Europe/Madrid":"(GMT+01:00) Madrid","Europe/Malta":"(GMT+01:00) Malta","Europe/Monaco":"(GMT+01:00) Monaco","Europe/Oslo":"(GMT+01:00) Oslo","Europe/Paris":"(GMT+01:00) Paris","Europe/Prague":"(GMT+01:00) Central European Time - Prague","Europe/Rome":"(GMT+01:00) Rome","Europe/Stockholm":"(GMT+01:00) Stockholm","Europe/Tirane":"(GMT+01:00) Tirane","Europe/Vienna":"(GMT+01:00) Vienna","Europe/Warsaw":"(GMT+01:00) Warsaw","Europe/Zurich":"(GMT+01:00) Zurich","Africa/Cairo":"(GMT+02:00) Cairo","Africa/Johannesburg":"(GMT+02:00) Johannesburg","Africa/Maputo":"(GMT+02:00) Maputo","Africa/Tripoli":"(GMT+02:00) Tripoli","Asia/Amman":"(GMT+02:00) Amman","Asia/Beirut":"(GMT+02:00) Beirut","Asia/Damascus":"(GMT+02:00) Damascus","Asia/Gaza":"(GMT+02:00) Gaza","Asia/Jerusalem":"(GMT+02:00) Jerusalem","Asia/Nicosia":"(GMT+02:00) Nicosia","Europe/Athens":"(GMT+02:00) Athens","Europe/Bucharest":"(GMT+02:00) Bucharest","Europe/Chisinau":"(GMT+02:00) Chisinau","Europe/Helsinki":"(GMT+02:00) Helsinki","Europe/Istanbul":"(GMT+02:00) Istanbul","Europe/Kaliningrad":"(GMT+02:00) Moscow-01 - Kaliningrad","Europe/Kiev":"(GMT+02:00) Kiev","Europe/Riga":"(GMT+02:00) Riga","Europe/Sofia":"(GMT+02:00) Sofia","Europe/Tallinn":"(GMT+02:00) Tallinn","Europe/Vilnius":"(GMT+02:00) Vilnius","Africa/Khartoum":"(GMT+03:00) Khartoum","Africa/Nairobi":"(GMT+03:00) Nairobi","Antarctica/Syowa":"(GMT+03:00) Syowa","Asia/Baghdad":"(GMT+03:00) Baghdad","Asia/Qatar":"(GMT+03:00) Qatar","Asia/Riyadh":"(GMT+03:00) Riyadh","Europe/Minsk":"(GMT+03:00) Minsk","Europe/Moscow":"(GMT+03:00) Moscow+00 - Moscow","Asia/Tehran":"(GMT+03:30) Tehran","Asia/Baku":"(GMT+04:00) Baku","Asia/Dubai":"(GMT+04:00) Dubai","Asia/Tbilisi":"(GMT+04:00) Tbilisi","Asia/Yerevan":"(GMT+04:00) Yerevan","Europe/Samara":"(GMT+04:00) Moscow+01 - Samara","Indian/Mahe":"(GMT+04:00) Mahe","Indian/Mauritius":"(GMT+04:00) Mauritius","Indian/Reunion":"(GMT+04:00) Reunion","Asia/Kabul":"(GMT+04:30) Kabul","Antarctica/Mawson":"(GMT+05:00) Mawson","Asia/Aqtau":"(GMT+05:00) Aqtau","Asia/Aqtobe":"(GMT+05:00) Aqtobe","Asia/Ashgabat":"(GMT+05:00) Ashgabat","Asia/Dushanbe":"(GMT+05:00) Dushanbe","Asia/Karachi":"(GMT+05:00) Karachi","Asia/Tashkent":"(GMT+05:00) Tashkent","Asia/Yekaterinburg":"(GMT+05:00) Moscow+02 - Yekaterinburg","Indian/Kerguelen":"(GMT+05:00) Kerguelen","Indian/Maldives":"(GMT+05:00) Maldives","Asia/Calcutta":"(GMT+05:30) India Standard Time","Asia/Colombo":"(GMT+05:30) Colombo","Asia/Katmandu":"(GMT+05:45) Katmandu","Antarctica/Vostok":"(GMT+06:00) Vostok","Asia/Almaty":"(GMT+06:00) Almaty","Asia/Bishkek":"(GMT+06:00) Bishkek","Asia/Dhaka":"(GMT+06:00) Dhaka","Asia/Omsk":"(GMT+06:00) Moscow+03 - Omsk, Novosibirsk","Asia/Thimphu":"(GMT+06:00) Thimphu","Indian/Chagos":"(GMT+06:00) Chagos","Asia/Rangoon":"(GMT+06:30) Rangoon","Indian/Cocos":"(GMT+06:30) Cocos","Antarctica/Davis":"(GMT+07:00) Davis","Asia/Bangkok":"(GMT+07:00) Bangkok","Asia/Hovd":"(GMT+07:00) Hovd","Asia/Jakarta":"(GMT+07:00) Jakarta","Asia/Krasnoyarsk":"(GMT+07:00) Moscow+04 - Krasnoyarsk","Asia/Saigon":"(GMT+07:00) Hanoi","Asia/Ho_Chi_Minh":"(GMT+07:00) Ho Chi Minh","Indian/Christmas":"(GMT+07:00) Christmas","Antarctica/Casey":"(GMT+08:00) Casey","Asia/Brunei":"(GMT+08:00) Brunei","Asia/Choibalsan":"(GMT+08:00) Choibalsan","Asia/Hong_Kong":"(GMT+08:00) Hong Kong","Asia/Irkutsk":"(GMT+08:00) Moscow+05 - Irkutsk","Asia/Kuala_Lumpur":"(GMT+08:00) Kuala Lumpur","Asia/Macau":"(GMT+08:00) Macau","Asia/Makassar":"(GMT+08:00) Makassar","Asia/Manila":"(GMT+08:00) Manila","Asia/Shanghai":"(GMT+08:00) China Time - Beijing","Asia/Singapore":"(GMT+08:00) Singapore","Asia/Taipei":"(GMT+08:00) Taipei","Asia/Ulaanbaatar":"(GMT+08:00) Ulaanbaatar","Australia/Perth":"(GMT+08:00) Western Time - Perth","Asia/Pyongyang":"(GMT+08:30) Pyongyang","Asia/Dili":"(GMT+09:00) Dili","Asia/Jayapura":"(GMT+09:00) Jayapura","Asia/Seoul":"(GMT+09:00) Seoul","Asia/Tokyo":"(GMT+09:00) Tokyo","Asia/Yakutsk":"(GMT+09:00) Moscow+06 - Yakutsk","Pacific/Palau":"(GMT+09:00) Palau","Australia/Adelaide":"(GMT+10:30) Central Time - Adelaide","Australia/Darwin":"(GMT+09:30) Central Time - Darwin","Antarctica/DumontDUrville":"(GMT+10:00) Dumont D\'Urville","Asia/Magadan":"(GMT+10:00) Moscow+07 - Magadan","Asia/Vladivostok":"(GMT+10:00) Moscow+07 - Yuzhno-Sakhalinsk","Australia/Brisbane":"(GMT+10:00) Eastern Time - Brisbane","Australia/Hobart":"(GMT+11:00) Eastern Time - Hobart","Australia/Sydney":"(GMT+11:00) Eastern Time - Melbourne, Sydney","Pacific/Chuuk":"(GMT+10:00) Truk","Pacific/Guam":"(GMT+10:00) Guam","Pacific/Port_Moresby":"(GMT+10:00) Port Moresby","Pacific/Efate":"(GMT+11:00) Efate","Pacific/Guadalcanal":"(GMT+11:00) Guadalcanal","Pacific/Kosrae":"(GMT+11:00) Kosrae","Pacific/Norfolk":"(GMT+11:00) Norfolk","Pacific/Noumea":"(GMT+11:00) Noumea","Pacific/Pohnpei":"(GMT+11:00) Ponape","Asia/Kamchatka":"(GMT+12:00) Moscow+09 - Petropavlovsk-Kamchatskiy","Pacific/Auckland":"(GMT+13:00) Auckland","Pacific/Fiji":"(GMT+13:00) Fiji","Pacific/Funafuti":"(GMT+12:00) Funafuti","Pacific/Kwajalein":"(GMT+12:00) Kwajalein","Pacific/Majuro":"(GMT+12:00) Majuro","Pacific/Nauru":"(GMT+12:00) Nauru","Pacific/Tarawa":"(GMT+12:00) Tarawa","Pacific/Wake":"(GMT+12:00) Wake","Pacific/Wallis":"(GMT+12:00) Wallis","Pacific/Apia":"(GMT+14:00) Apia","Pacific/Enderbury":"(GMT+13:00) Enderbury","Pacific/Fakaofo":"(GMT+13:00) Fakaofo","Pacific/Tongatapu":"(GMT+13:00) Tongatapu","Pacific/Kiritimati":"(GMT+14:00) Kiritimati"}')}}]);