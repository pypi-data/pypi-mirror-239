Metadata-Version: 2.1
Name: zillionare-trader-client
Version: 0.4.4
Summary: Zillionare Trader Client
Home-page: https://github.com/zillionare/trader-client
License: MIT
Author: Aaron Yang
Author-email: code@jieyu.ai
Requires-Python: >=3.8,<3.9
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.8
Provides-Extra: dev
Provides-Extra: doc
Provides-Extra: test
Requires-Dist: arrow (>=1.2.3,<2.0.0)
Requires-Dist: black (>=22.3.0,<23.0.0) ; extra == "test"
Requires-Dist: flake8 (==3.8.4) ; extra == "test"
Requires-Dist: flake8-docstrings (>=1.6.0,<2.0.0) ; extra == "test"
Requires-Dist: httpx (>=0.23,<0.24)
Requires-Dist: isort (==5.6.4) ; extra == "test"
Requires-Dist: livereload (>=2.6.3,<3.0.0) ; extra == "doc"
Requires-Dist: mike (>=1.1.2,<2.0.0) ; extra == "doc"
Requires-Dist: mkdocs (>=1.2.3,<2.0.0) ; extra == "doc"
Requires-Dist: mkdocs-autorefs (>=0.4.1,<0.5.0) ; extra == "doc"
Requires-Dist: mkdocs-include-markdown-plugin (>=3.2.3,<4.0.0) ; extra == "doc"
Requires-Dist: mkdocs-material (>=8.1.11,<9.0.0) ; extra == "doc"
Requires-Dist: mkdocs-material-extensions (>=1.0.3,<2.0.0)
Requires-Dist: mkdocstrings (>=0.18.0,<0.19.0) ; extra == "doc"
Requires-Dist: numpy (>=1.24.3,<2.0.0)
Requires-Dist: pre-commit (>=2.12.0,<3.0.0) ; extra == "dev"
Requires-Dist: pytest-cov (==2.10.1) ; extra == "test"
Requires-Dist: sanic (>=23.3.0,<24.0.0) ; extra == "test"
Requires-Dist: toml (>=0.10.2,<0.11.0) ; extra == "dev"
Requires-Dist: tox (>=3.20.1,<4.0.0) ; extra == "dev"
Requires-Dist: twine (>=3.3.0,<4.0.0) ; extra == "dev"
Requires-Dist: zillionare-core-types (>=0.6,<0.7)
Description-Content-Type: text/markdown

# 大富翁交易客户端

trade-client是大富翁量化框架中用来交易的客户端。它对回测和实盘提供了几乎相同的接口，从而使得经过回测的策略，可以无缝切换到实盘环境中。

## 功能

* 进行实盘和回测交易
* 获取账号基本信息，比如本金、资产、持仓、盈亏及盈亏比等。
* 交易函数，比如买入（限价和市价）、卖出（限价和市价）、撤单等
* 查询委托、成交、持仓（当日和指定日期）
* 查询一段时间内的账户评估指标，比如sharpe, sortino, calmar, voliality, win rate, max drawdown等。
* 查询参照标的同期指标。

!!!Warning
    在回测模式下，注意可能引起账户数据改变的操作，比如`buy`、`sell`等，必须严格按时间顺序执行，比如下面的例子：
    ```
    client.buy(..., order_time=datetime.datetime(2022, 3, 1, 9, 31))
    client.buy(..., order_time=datetime.datetime(2022, 3, 4, 14, 31))
    client.buy(..., order_time=datetime.datetime(2022, 3, 4, 14, 32))
    client.sell(..., order_time=datetime.datetime(2022, 3, 7, 9, 31))
    ```
    是正确的执行顺序，但下面的执行顺序必然产生错误的结果(实际上服务器也会进行检测并报错误)
    ```
    client.buy(..., order_time=datetime.datetime(2022, 3, 1, 14, 31))
    client.buy(..., order_time=datetime.datetime(2022, 3, 1, 9, 31))
    client.sell(..., order_time=datetime.datetime(2022, 3, 7, 9, 31))
    ```
    策略需要自行决定是否允许这样的情况发生，以及如果发生失，会产生什么样的后果。

## Credits

This package was created with [zillionare/python project wizard](https://zillionare.github.io/python-project-wizard) project template.

